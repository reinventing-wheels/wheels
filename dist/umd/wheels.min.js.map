{"version":3,"file":"wheels.min.js","sources":["../../src/math/easing.ts","../../src/math/native.ts","../../src/math/fit.ts","../../src/math/extensions.ts","../../src/math/pid.ts","../../src/array/index.ts","../../src/array/sort-indices.ts","../../src/bayer/index.ts","../../src/braille/util.ts","../../src/braille/canvas.ts","../../src/braille/encoding.ts","../../src/braille/render.ts","../../src/color/rgb/constants.ts","../../src/color/rgb/i.ts","../../src/braille/render-image-data.ts","../../src/color/rgb/f.ts","../../src/color/cubehelix.ts","../../src/color/srgb.ts","../../src/color/hsl.ts","../../src/color/rgb/index.ts","../../src/color/rgb/operations.ts","../../src/color/sinebow.ts","../../src/object/deep-copy.ts","../../src/object/index.ts","../../src/dom/index.ts","../../src/hash/crc32.ts","../../src/hash/joaat.ts","../../src/prng/alea.ts","../../src/prng/lcg.ts","../../src/prng/mt.ts","../../src/prng/lfsr.ts","../../src/prng/tmt.ts","../../src/prng/well.ts","../../src/prng/xs.ts","../../src/re/index.ts","../../src/tag/index.ts","../../src/text/styles/util.ts","../../src/text/styles/fractur.ts","../../src/text/styles/script.ts","../../src/text/styles/serif.ts","../../src/text/styles/sans-serif.ts","../../src/text/styles/index.ts","../../src/text/format.ts","../../src/text/macro.ts","../../src/text/split.ts","../../src/text/template.ts","../../src/text/levenshtein.ts","../../src/text/sanitize.ts","../../src/util/index.ts","../../src/html/index.ts"],"sourcesContent":["import { N, Fn } from '../types'\n\nexport const\n  smoothstep: Fn<N, N> = t => t*t*(3 - t*2),\n  smootherstep: Fn<N, N> = t => t*t*t*(t*(t*6 - 15) + 10),\n  smootheststep: Fn<N, N> = t => t*t*t*t*(t*(t*(70 - t*20) - 84) + 35)\n\nexport const\n  linear: Fn<N, N> = t => t,\n  in2: Fn<N, N> = t => t*t,\n  in3: Fn<N, N> = t => t*t*t,\n  in4: Fn<N, N> = t => t*t*t*t,\n  in5: Fn<N, N> = t => t*t*t*t*t,\n  out2: Fn<N, N> = t => t*(2-t),\n  out3: Fn<N, N> = t => (--t)*t*t+1,\n  out4: Fn<N, N> = t => 1-(--t)*t*t*t,\n  out5: Fn<N, N> = t => 1+(--t)*t*t*t*t,\n  inOut2: Fn<N, N> = t => t<.5 ? 2*t*t : -1+(4-2*t)*t,\n  inOut3: Fn<N, N> = t => t<.5 ? 4*t*t*t : (t-1)*(2*t-2)*(2*t-2)+1,\n  inOut4: Fn<N, N> = t => t<.5 ? 8*t*t*t*t : 1-8*(--t)*t*t*t,\n  inOut5: Fn<N, N> = t => t<.5 ? 16*t*t*t*t*t : 1+16*(--t)*t*t*t*t\n","export const {\n  abs, acos, acosh, asin, asinh, atan, atan2, atanh, cbrt, ceil, clz32,\n  cos, cosh, exp, expm1, floor, fround, hypot, imul, log, log10, log1p,\n  log2, max, min, pow, random, round, sign, sin, sinh, sqrt, tan, tanh,\n  trunc, E, LN10, LN2, LOG10E, LOG2E, PI, SQRT1_2, SQRT2\n} = Math\n\nexport const {\n  isFinite,\n  isInteger,\n  isNaN,\n  isSafeInteger,\n  parseFloat,\n  parseInt,\n  EPSILON,\n  MAX_SAFE_INTEGER,\n  MAX_VALUE,\n  MIN_SAFE_INTEGER,\n  MIN_VALUE,\n  NEGATIVE_INFINITY,\n  POSITIVE_INFINITY\n} = Number\n","import { min, max } from './native'\n\nconst fit = (fn: typeof min | typeof max) =>\n  (width: number, height: number) =>\n    (widthʹ: number, heightʹ: number) =>\n      fn(width/widthʹ, height/heightʹ)\n\nexport const contain = fit(min)\nexport const cover   = fit(max)\n","import { EPSILON, PI, E, min, max } from './native'\nimport { N } from '../types'\n\nexport const\n  TAU = 2 * PI,\n  PHI = 5 ** .5 * .5 + .5\n\nexport const\n  ε = EPSILON,\n  e = E,\n  π = PI,\n  τ = TAU,\n  ϕ = PHI\n\nexport const\n  add = (a: N, b: N) => a + b,\n  sub = (a: N, b: N) => a - b,\n  mul = (a: N, b: N) => a * b,\n  div = (a: N, b: N) => a / b\n\nexport const\n  clamp = (a: N, b: N, t: N) => min(max(a, t), b),\n  lerp  = (a: N, b: N, t: N) => a + t * (b - a),\n  norm  = (a: N, b: N, t: N) => (t - a) / (b - a),\n  map   = (aʹ: N, bʹ: N, aʺ: N, bʺ: N, t: N) => lerp(aʺ, bʺ, norm(aʹ, bʹ, t))\n","import { MIN_VALUE, clamp } from './extended'\n\nexport const pid = (Kp: number, Ki: number, Kd: number, M = Infinity) => {\n  let tʹ: number\n  let eʹ: number\n  let Σe = 0\n\n  return (e: number, t: number) => {\n    const Δt = t - tʹ || MIN_VALUE\n    const Δe = e - eʹ || 0\n\n    tʹ = t\n    eʹ = e\n    Σe = clamp(-M, M, Σe + e*Δt)\n\n    return Kp*e + Ki*Σe + Kd*Δe/Δt\n  }\n}\n","import { random } from '../math'\n\nexport const pick = <T>(items: ArrayLike<T>) =>\n  items[items.length * random() | 0]\n\nexport const shuffle = <T>(items: T[]): T[] => {\n  for (let i = items.length; i > 0;) {\n    const j = Math.floor(Math.random() * i--);\n    [items[i], items[j]] = [items[j], items[i]]\n  }\n  return items\n}\n\nexport const weighted = <T>(items: [number, T][]) => {\n  const total = items.reduce((acc, [w]) => acc + w, 0)\n  return () => {\n    const r = Math.random() * total\n    let acc = 0\n    for (const [w, item] of items) {\n      if ((acc += w) > r)\n        return item\n    }\n    throw new Error() // unreachable\n  }\n}\n\nexport * from './sort-indices'\n","const defaultComparator = <T>(a: T, b: T) =>\n  (a as any > b as any) - (a as any < b as any)\n\nexport const sortIndicesByValues = <T>(arr: T[], cmp = defaultComparator) =>\n  [...arr.keys()].sort((i, j) => cmp(arr[i], arr[j]))\n","export const at = (x: number, y: number, order: number) => {\n  let z = 0\n  for (let i = order; i--; x >>= 1, y >>= 1)\n    z = (x&1 ^ y&1 | z<<1)<<1 | y&1\n  return z + .5\n}\n\nexport const lut = (order: number) => {\n  const size = 1<<order, area = size*size\n  const lut = new Float32Array(area)\n  for (let y = 0; y < size; y++)\n    for (let x = 0; x < size; x++)\n      lut[x + y*size] = at(x, y, order) / area\n  return (x: number, y: number) => lut[x%size + y%size*size]\n}\n","export const reverseByte = (b: number) =>\n  (b&0x01)<<7 | (b&0x02)<<5 | (b&0x04)<<3 | (b&0x08)<<1 |\n  (b&0x10)>>1 | (b&0x20)>>3 | (b&0x40)>>5 | (b&0x80)>>7\n\nexport const encodeByte = (b: number) =>\n  (b&0x08)<<3 | (b&0x70)>>1 | (b&0x87) | 0x2800\n\nexport const decodeByte = (b: number) =>\n  (b&0x40)>>3 | (b&0x38)<<1 | (b&0x87)\n","import { encodeByte } from './util'\n\nconst encodeLine = (line: Iterable<number>) => Array.from(line, encodeByte)\nconst renderLine = (line: Iterable<number>) => String.fromCharCode(...encodeLine(line))\nconst dot = (x: number, y: number) => 1 << ((y&3) | (x&1)<<2)\n\nexport type ICanvas = Uint8Array[]\nexport type ICanvasRender = (canvas: ICanvas) => string\nexport type ICanvasCreate = (width: number, height: number) => ICanvas\nexport type ICanvasEdit = (canvas: ICanvas, x: number, y: number) => number\nexport type ICanvasFill = (canvas: ICanvas, fn: (x: number, y: number) => number) => void\n\nexport const render: ICanvasRender = canvas =>\n  canvas.map(renderLine).join('\\n')\n\nexport const create: ICanvasCreate = (width, height) =>\n  Array.from(Array(height>>2), () => new Uint8Array(width>>1))\n\nexport const toggle: ICanvasEdit = (canvas, x, y) =>\n  canvas[y>>2][x>>1] ^= dot(x, y)\n\nexport const on: ICanvasEdit = (canvas, x, y) =>\n  canvas[y>>2][x>>1] |= dot(x, y)\n\nexport const off: ICanvasEdit = (canvas, x, y) =>\n  canvas[y>>2][x>>1] &= ~dot(x, y)\n\nexport const fill: ICanvasFill = (canvas, fn) => {\n  const w = canvas[0].length << 1\n  const h = canvas.length << 2\n  for (let y = 0; y < h; y += 4)\n    for (let x = 0; x < w; x += 2)\n      canvas[y>>2][x>>1] =\n        fn(x+0, y+0)<<0 | fn(x+1, y+0)<<4 |\n        fn(x+0, y+1)<<1 | fn(x+1, y+1)<<5 |\n        fn(x+0, y+2)<<2 | fn(x+1, y+2)<<6 |\n        fn(x+0, y+3)<<3 | fn(x+1, y+3)<<7\n}\n","import { reverseByte, encodeByte, decodeByte } from './util'\n\nexport const encode = (input: Iterable<number>) =>\n  String.fromCharCode(...Array.from(input, b => encodeByte(reverseByte(b))))\n\nexport const decode = (input: string) =>\n  Array.from(input, c => reverseByte(decodeByte(c.charCodeAt(0))))\n","export const render = (w: number, h: number, fn: (x: number, y: number) => any) => {\n  const lines = []\n  for (let y = 0; y < h; y += 4) {\n    const line = []\n    for (let x = 0; x < w; x += 2) {\n      const byte =\n        fn(x+0, y+0)<<0 | fn(x+1, y+0)<<3 | // ●₀ ●₃\n        fn(x+0, y+1)<<1 | fn(x+1, y+1)<<4 | // ●₁ ●₄\n        fn(x+0, y+2)<<2 | fn(x+1, y+2)<<5 | // ●₂ ●₅\n        fn(x+0, y+3)<<6 | fn(x+1, y+3)<<7   // ○₆ ○₇\n      line.push(0x2800 | byte)\n    }\n    lines.push(String.fromCharCode(...line))\n  }\n  return lines.join('\\n')\n}\n","export const R = .212655\nexport const G = .715158\nexport const B = .072187\n","import { R, G, B } from './constants'\n\nexport const lum = (r: number, g: number, b: number) =>\n  (R*r + G*g + B*b) / 0xff\n\nexport const rgb = (r: number, g: number, b: number) =>\n  (0xff & r)<<16 | (0xff & g)<<8 | (0xff & b)\n\nexport const r = (rgb: number) => 0xff & rgb>>16\nexport const g = (rgb: number) => 0xff & rgb>>8\nexport const b = (rgb: number) => 0xff & rgb\n","import { lum } from '../color/rgb/i'\n\nconst enum CharCode {\n  newline = 0xa,\n  braille = 0x2800\n}\n\nconst charCodes = function* ({ width, height, data }: ImageData) {\n  const\n    xy00 = 0x0*width, xy10 = 0x4+xy00,\n    xy01 = 0x4*width, xy11 = 0x4+xy01,\n    xy02 = 0x8*width, xy12 = 0x4+xy02,\n    xy03 = 0xc*width, xy13 = 0x4+xy03\n\n  for (let y = 0; y < height; y += 4) {\n    for (let x = 0; x < width; x += 2) {\n      const\n        r = x + y*width << 2,\n        g = r | 1,\n        b = r | 2\n\n      const\n        b0 = lum(data[r+xy00], data[g+xy00], data[b+xy00]), // ⣾\n        b1 = lum(data[r+xy01], data[g+xy01], data[b+xy01]), // ⣽\n        b2 = lum(data[r+xy02], data[g+xy02], data[b+xy02]), // ⣻\n        b3 = lum(data[r+xy03], data[g+xy03], data[b+xy03]), // ⢿\n        b4 = lum(data[r+xy10], data[g+xy10], data[b+xy10]), // ⣷\n        b5 = lum(data[r+xy11], data[g+xy11], data[b+xy11]), // ⣯\n        b6 = lum(data[r+xy12], data[g+xy12], data[b+xy12]), // ⣟\n        b7 = lum(data[r+xy13], data[g+xy13], data[b+xy13])  // ⡿\n\n      const byte =\n        .5+b0 << 0 | .5+b4 << 3 | // ●₀ ●₃\n        .5+b1 << 1 | .5+b5 << 4 | // ●₁ ●₄\n        .5+b2 << 2 | .5+b6 << 5 | // ●₂ ●₅\n        .5+b3 << 6 | .5+b7 << 7   // ○₆ ○₇\n\n      yield CharCode.braille | byte\n    }\n    yield CharCode.newline\n  }\n}\n\nexport const renderImageData = (imageData: ImageData) =>\n  String.fromCharCode(...charCodes(imageData))\n","import { r as rʹ, g as gʹ, b as bʹ, rgb as rgbʹ } from './i'\nimport { R, G, B } from './constants'\n\nexport const lum = (r: number, g: number, b: number) =>\n  R*r + G*g + B*b\n\nexport const rgb = (r: number, g: number, b: number) =>\n  rgbʹ(.5 + 0xff*r, .5 + 0xff*g, .5 + 0xff*b)\n\nexport const r = (rgb: number) => rʹ(rgb) / 0xff\nexport const g = (rgb: number) => gʹ(rgb) / 0xff\nexport const b = (rgb: number) => bʹ(rgb) / 0xff\n","import { π, τ, cos, sin, clamp } from '../math'\nimport { rgb } from './rgb/f'\n\nexport const core = (x: number, y: number, z: number) => {\n  const cosx = cos(x), sinx = sin(x)\n  const r = clamp(0, 1, z + y*(-0.14861*cosx + +1.78277*sinx))\n  const g = clamp(0, 1, z + y*(-0.29227*cosx + -0.90649*sinx))\n  const b = clamp(0, 1, z + y*(+1.97294*cosx))\n  return rgb(r, g, b)\n}\n\nexport const factory = (start = .5, rots = -1.5, hue = 1) =>\n  (t: number) => core(τ*(start/3 + rots*t), .5*hue*t*(1 - t), t)\n\nexport const standard = (t: number) =>\n  core(π*(1/3 - 3*t), .5*t*(1 - t), t)\n\n// standard range: (-1/6, 1, 0) -> (-5/3, 1, 1)\nexport const hsl = (h: number, s: number, l: number) =>\n  core(τ*(h + 1/3), .5*s*l*(1 - l), l)\n","export const rgb = (srgb: number) =>\n  srgb<=0.04045 ? srgb/12.92 : ((srgb+0.055)/1.055)**2.4\n\nexport const srgb = (rgb: number) =>\n  rgb<=0.0031308 ? rgb*12.92 : (rgb**(1/2.4))*1.055 - 0.055\n","import { abs, clamp } from '../math'\nimport { rgb } from './rgb/f'\n\nexport const hsl = (h: number, s: number, l: number) => {\n  const hʹ = h%1, sʹ = s*(.5-abs(.5-l))\n  const r = l + sʹ*clamp(-1, 1, 12*abs((3/3-hʹ)%1-.5)-3)\n  const g = l + sʹ*clamp(-1, 1, 12*abs((4/3-hʹ)%1-.5)-3)\n  const b = l + sʹ*clamp(-1, 1, 12*abs((5/3-hʹ)%1-.5)-3)\n  return rgb(r, g, b)\n}\n","import { floor, random as randomʹ } from '../../math'\nimport * as i from './i'\nimport * as f from './f'\n\nexport const random = () =>\n  floor(randomʹ() * 0x1000000)\n\nexport const lum = (rgb: number) =>\n  i.lum(i.r(rgb), i.g(rgb), i.b(rgb))\n\nexport const hex = (rgb: number) =>\n  '#' + ('00000' + floor(rgb).toString(16)).slice(-6)\n\nexport { i, f }\nexport * from './constants'\nexport * from './operations'\n","import { min, max, lerp } from '../../math'\nimport * as i from './i'\nimport * as f from './f'\n\nexport const add = (rgbʹ: number, rgbʺ: number) => i.rgb(\n  min(i.r(rgbʹ) + i.r(rgbʺ), 0xff),\n  min(i.g(rgbʹ) + i.g(rgbʺ), 0xff),\n  min(i.b(rgbʹ) + i.b(rgbʺ), 0xff)\n)\n\nexport const sub = (rgbʹ: number, rgbʺ: number) => i.rgb(\n  max(i.r(rgbʹ) - i.r(rgbʺ), 0),\n  max(i.g(rgbʹ) - i.g(rgbʺ), 0),\n  max(i.b(rgbʹ) - i.b(rgbʺ), 0)\n)\n\nexport const mul = (rgbʹ: number, rgbʺ: number) => i.rgb(\n  f.r(rgbʹ) * i.r(rgbʺ) + .5,\n  f.g(rgbʹ) * i.g(rgbʺ) + .5,\n  f.b(rgbʹ) * i.b(rgbʺ) + .5\n)\n\nexport const mix = (rgbʹ: number, rgbʺ: number, t: number) => i.rgb(\n  lerp(i.r(rgbʹ), i.r(rgbʺ), t),\n  lerp(i.g(rgbʹ), i.g(rgbʺ), t),\n  lerp(i.b(rgbʹ), i.b(rgbʺ), t)\n)\n","import { τ, cos, abs } from '../math'\nimport { rgb } from './rgb/f'\n\nexport const sinebow = (h: number, s: number, l: number) => {\n  const sʹ = s*(.5-abs(.5-l))\n  const r = l + sʹ*cos(τ*(0/3-h))\n  const g = l + sʹ*cos(τ*(1/3-h))\n  const b = l + sʹ*cos(τ*(2/3-h))\n  return rgb(r, g, b)\n}\n","const mapObject = (obj: Object, fn: Function) => {\n  const proto = Object.getPrototypeOf(obj)\n  const props = Object.getOwnPropertyDescriptors(obj)\n  for (const key in props)\n    props[key].value = fn(props[key].value)\n  return Object.create(proto, props)\n}\n\nexport const deepCopy = <T>(arg: T): T =>\n  typeof arg === 'object' && arg !== null\n    ? Array.isArray(arg)\n      ? arg.map(deepCopy)\n      : mapObject(arg, deepCopy)\n    : arg\n","export const extend: typeof Object.assign = Object.assign\n\nexport const overwrite: <T>(target: T, ...sources: Partial<T>[]) => T = extend\n\nexport const copy = <T>(object: T) => overwrite({} as T, object)\n\nexport const get = (object: any, path: string, sep = '.') =>\n  path.split(sep).reduce((o, next) => o && o[next], object)\n\nexport const proto = <T>(object: T) => {\n  const props = new Set<keyof T | 'constructor'>()\n  for (let o = object; o && o !== Object.prototype; o = Object.getPrototypeOf(o))\n    Object.getOwnPropertyNames(o).forEach(prop => props.add(prop as any))\n  return props\n}\n\nexport * from './deep-copy'\n","import { overwrite } from '../object'\n\nexport const context2d = (...attributes: Partial<HTMLCanvasElement>[]) =>\n  (...settings: Partial<CanvasRenderingContext2D>[]) =>\n    overwrite(element('canvas')(...attributes).getContext('2d')!, ...settings)\n\nexport const element = <K extends keyof HTMLElementTagNameMap>(name: K) =>\n  (...attributes: Partial<HTMLElementTagNameMap[K]>[]) =>\n    overwrite(document.createElement(name), ...attributes)\n\nexport const append = (parent: Element) => (...children: Element[]) =>\n  children.forEach(child => parent.appendChild(child))\n\nexport const prevent = <E extends Event>(fn?: (event: E) => any) =>\n  (event: E) => { event.preventDefault(); fn && fn(event) }\n\nexport const raf = () =>\n  new Promise<number>(resolve => requestAnimationFrame(resolve))\n","export const factory = (polynomial: number) => (bytes: ArrayLike<number>, previous = 0) => {\n  let hash = ~previous\n  for (let j, i = 0; i < bytes.length; i++)\n    for (hash ^= bytes[i], j = 8; j--;)\n      hash = hash>>>1 ^ (hash&1 && polynomial)\n  return ~hash >>> 0\n}\n\nexport const crc32  = factory(0xEDB88320)\nexport const crc32c = factory(0x82F63B78)\n","export const joaat = (bytes: ArrayLike<number>) => {\n  let hash = 0\n  for (let i = 0; i < bytes.length; i++) {\n    hash += bytes[i]\n    hash += hash << 10\n    hash ^= hash >>> 6\n  }\n  hash += hash << 3\n  hash ^= hash >>> 11\n  hash += hash << 15\n  return hash >>> 0\n}\n","export const alea = (seed0 = 1, seed1 = 1, seed2 = 1, seed3 = 1) => {\n  let x = (seed0 >>> 0) / 0x100000000\n  let y = (seed1 >>> 0) / 0x100000000\n  let z = (seed2 >>> 0) / 0x100000000\n  let w = (seed3 >>> 0)\n\n  return () => {\n    const t = 2091639*x + w/0x100000000\n    return x = y, y = z, z = t - (w = t|0)\n  }\n}\n","export const factory = (a: number, c: number) => (seed = 1) => {\n  let x = seed\n  return () => x = x*a + c >>> 0\n}\n\nexport const lcg = factory(1664525, 1013904223) // Numerical Recipes\n","import { imul } from '../math'\n\nconst N = 624\nconst M = 397\nconst MATRIX_A   = 0x9908b0df\nconst UPPER_MASK = 0x80000000\nconst LOWER_MASK = 0x7fffffff\n\nexport const mt = (seed = 1) => {\n  const state = new Uint32Array(N)\n  for (let n = state[0] = seed, i = 1; i < N; i++)\n    n = state[i] = i + imul(n ^= n>>>30, 0x6C078965)\n\n  let index = N\n  return () => {\n    const a = state[index %= N]\n    const b = state[(index + 1) % N]\n    const c = state[(index + M) % N]\n    const d = a&UPPER_MASK | b&LOWER_MASK\n    let n = state[index++] = c ^ d>>>1 ^ (d&1 && MATRIX_A)\n    n ^= n >>> 11\n    n ^= n <<   7 & 0x9D2C5680\n    n ^= n <<  15 & 0xEFC60000\n    n ^= n >>> 18\n    return n >>> 0\n  }\n}\n","export const lfsr = (seed0 = 0, seed1 = 0, seed2 = 0, seed3 = 0) => {\n  let x = seed0 + 0x02\n  let y = seed1 + 0x08\n  let z = seed2 + 0x10\n  let w = seed3 + 0x80\n\n  return () => {\n    x = (x & 0xFFFFFFFE) << 18 ^ (x ^ x <<  6) >>> 13\n    y = (y & 0xFFFFFFF8) <<  2 ^ (y ^ y <<  2) >>> 27\n    z = (z & 0xFFFFFFF0) <<  7 ^ (z ^ z << 13) >>> 21\n    w = (w & 0xFFFFFF80) << 13 ^ (w ^ w <<  3) >>> 12\n    return (x ^ y ^ z ^ w) >>> 0\n  }\n}\n","import { imul } from '../math'\n\nconst state = (...state: number[]) => {\n  for (let n = state[0], i = 1; i < 8; i++)\n    n = state[i & 3] ^= i + imul(n ^= n>>>30, 0x6C078965)\n  return state\n}\n\nexport const tmt = (seed = 1, mat1 = 0x8F7011EE, mat2 = 0xFC78FF1F, tmat = 0x3793FDFF) => {\n  let [ x, y, z, w ] = state(seed, mat1, mat2, tmat)\n\n  return () => {\n    let n = 0x7FFFFFFF&x ^ y ^ z\n    let m = w\n    n ^= n <<  1\n    m ^= m >>> 1 ^ n\n\n    x = y\n    y = z\n    z = n ^ m << 10\n    w = m\n    y ^= -(m & 1) & mat1\n    z ^= -(m & 1) & mat2\n\n    m = x + (z >>> 8)\n    n = w ^ m\n    n ^= -(m & 1) & tmat\n    return n >>> 0\n  }\n}\n","export const well = (seed = 1) => {\n  const state = [ seed ]\n  let a, b, c, d, index = 0\n\n  return () => {\n    a = state[index]\n    c = state[index + 13 & 15]\n    b = a ^ c ^ a<<16 ^ c<<15\n    c = state[index + 9 & 15]\n    c = c ^ c>>>11\n    a = state[index] = b ^ c\n    d = a ^ a<<5 & 0xDA442D24\n    a = state[index = index + 15 & 15]\n    a = a ^ b ^ d ^ a<<2 ^ b<<18 ^ c<<28\n    return state[index] = a>>>0\n  }\n}\n","export const xs1 = (seed = 1) => {\n  let x = seed\n\n  return () => {\n    x ^= x <<  13\n    x ^= x >>> 17\n    x ^= x <<   5\n    return x >>> 0\n  }\n}\n\nexport const xs4 = (seed0 = 1, seed1 = 1, seed2 = 1, seed3 = 1) => {\n  let x = seed0\n  let y = seed1\n  let z = seed2\n  let w = seed3\n  let t\n\n  return () => {\n    t = x ^ x<<11\n    x = y\n    y = z\n    z = w\n    w = w ^ w>>>19 ^ t ^ t>>>8\n    return w >>> 0\n  }\n}\n","const specialChars = /[\\\\^$.*+?()[\\]{}|]/g\n\nexport const escape = (arg: any) =>\n  arg instanceof RegExp ? arg.source : ('' + arg).replace(specialChars, '\\\\$&')\n\nexport const re = (flags = '') => ([ first, ...rest ]: TemplateStringsArray, ...args: any[]) =>\n  new RegExp(args.reduce((acc, arg, i) => acc + escape(arg) + rest[i], first), flags)\n\nexport const join = (sep: string) => (flags = '') => (...parts: any[]) =>\n  new RegExp(parts.map(escape).join(sep), flags)\n\nexport const and = join('')\nexport const or = join('|')\nexport const r = re()\n","export type Tag<A, R, S = ReadonlyArray<string>> = (strings: S, ...args: A[]) => R\nexport type Map<A, R> = (arg: A) => R\n\nexport const mapArgs = <A, Aʹ, R>(fn: Map<Aʹ, A>, tag: Tag<A, R>): Tag<Aʹ, R> =>\n  (strings, ...args) => tag(strings, ...args.map(fn))\n\nexport const mapStrings = <A, R>(fn: Map<string, any>, tag: Tag<A, R>): Tag<A, R> =>\n  (strings, ...args) => tag(strings.map(fn), ...args)\n\nexport const mapResult = <A, R, Rʹ>(fn: Map<R, Rʹ>, tag: Tag<A, R>): Tag<A, Rʹ> =>\n  (strings, ...args) => fn(tag(strings, ...args))\n\nexport const raw = <A, T>(tag: Tag<A, T>): Tag<A, T, TemplateStringsArray> =>\n  (strings, ...args) => tag(strings.raw, ...args)\n\nexport const tag = <R, A>(fnArg: Map<A, any>, fnStr: Map<string, any>, fnRes: Map<string, R>) =>\n  mapResult(fnRes, mapStrings(fnStr, mapArgs(fnArg, identity)))\n\nexport const identity: Tag<any, string> = ([ first, ...rest ], ...args) =>\n  args.reduce((acc, arg, i) => acc + arg + rest[i], first)\n","export const str = String.fromCodePoint\n\nexport const idx = (chr: string) => chr.codePointAt(0)!\nexport const idx_az = (chr: string) => 31 & idx(chr)-1\nexport const idx_09 = (chr: string) => 15 & idx(chr)\n\nexport const re_09 = /[0-9]/g\nexport const re_az = /[a-z]/g\nexport const re_AZ = /[A-Z]/g\nexport const re_aZ = /[a-zA-Z]/g\nexport const re_fw = /[!-~]/g\n\nexport const replace = (...steps: [RegExp, (s: string) => string][]) =>\n  (text: string) => steps.reduce((acc, [re, fn]) => acc.replace(re, fn), text)\n","import { replace, str, re_AZ, re_az, idx_az } from './util'\n\nexport const regular = replace(\n  [re_AZ, chr => str(0x1d504 + idx_az(chr))], // 𝔄𝔅𝔆𝔇𝔈𝔉𝔊𝔋𝔌𝔍𝔎𝔏𝔐𝔑𝔒𝔓𝔔𝔕𝔖𝔗𝔘𝔙𝔚𝔛𝔜𝔝\n  [re_az, chr => str(0x1d51e + idx_az(chr))]  // 𝔞𝔟𝔠𝔡𝔢𝔣𝔤𝔥𝔦𝔧𝔨𝔩𝔪𝔫𝔬𝔭𝔮𝔯𝔰𝔱𝔲𝔳𝔴𝔵𝔶𝔷\n)\n\nexport const bold = replace(\n  [re_AZ, chr => str(0x1d56c + idx_az(chr))], // 𝕬𝕭𝕮𝕯𝕰𝕱𝕲𝕳𝕴𝕵𝕶𝕷𝕸𝕹𝕺𝕻𝕼𝕽𝕾𝕿𝖀𝖁𝖂𝖃𝖄𝖅\n  [re_az, chr => str(0x1d586 + idx_az(chr))]  // 𝖆𝖇𝖈𝖉𝖊𝖋𝖌𝖍𝖎𝖏𝖐𝖑𝖒𝖓𝖔𝖕𝖖𝖗𝖘𝖙𝖚𝖛𝖜𝖝𝖞𝖟\n)\n","import { replace, str, re_AZ, re_az, idx_az } from './util'\n\nexport const regular = replace(\n  [re_AZ, chr => str(0x1d49c + idx_az(chr))], // 𝒜𝒝𝒞𝒟𝒠𝒡𝒢𝒣𝒤𝒥𝒦𝒧𝒨𝒩𝒪𝒫𝒬𝒭𝒮𝒯𝒰𝒱𝒲𝒳𝒴𝒵\n  [re_az, chr => str(0x1d4b6 + idx_az(chr))]  // 𝒶𝒷𝒸𝒹𝒺𝒻𝒼𝒽𝒾𝒿𝓀𝓁𝓂𝓃𝓄𝓅𝓆𝓇𝓈𝓉𝓊𝓋𝓌𝓍𝓎𝓏\n)\n\nexport const bold = replace(\n  [re_AZ, chr => str(0x1d4d0 + idx_az(chr))], // 𝓐𝓑𝓒𝓓𝓔𝓕𝓖𝓗𝓘𝓙𝓚𝓛𝓜𝓝𝓞𝓟𝓠𝓡𝓢𝓣𝓤𝓥𝓦𝓧𝓨𝓩\n  [re_az, chr => str(0x1d4ea + idx_az(chr))]  // 𝓪𝓫𝓬𝓭𝓮𝓯𝓰𝓱𝓲𝓳𝓴𝓵𝓶𝓷𝓸𝓹𝓺𝓻𝓼𝓽𝓾𝓿𝔀𝔁𝔂𝔃\n)\n","import { replace, str, re_AZ, re_az, re_09, idx_az, idx_09 } from './util'\n\nexport const bold = replace(\n  [re_AZ, chr => str(0x1d400 + idx_az(chr))], // 𝐀𝐁𝐂𝐃𝐄𝐅𝐆𝐇𝐈𝐉𝐊𝐋𝐌𝐍𝐎𝐏𝐐𝐑𝐒𝐓𝐔𝐕𝐖𝐗𝐘𝐙\n  [re_az, chr => str(0x1d41a + idx_az(chr))], // 𝐚𝐛𝐜𝐝𝐞𝐟𝐠𝐡𝐢𝐣𝐤𝐥𝐦𝐧𝐨𝐩𝐪𝐫𝐬𝐭𝐮𝐯𝐰𝐱𝐲𝐳\n  [re_09, chr => str(0x1d7ce + idx_09(chr))]  // 𝟎𝟏𝟐𝟑𝟒𝟓𝟔𝟕𝟖𝟗\n)\n\nexport const italic = replace(\n  [re_AZ, chr => str(0x1d434 + idx_az(chr))], // 𝐴𝐵𝐶𝐷𝐸𝐹𝐺𝐻𝐼𝐽𝐾𝐿𝑀𝑁𝑂𝑃𝑄𝑅𝑆𝑇𝑈𝑉𝑊𝑋𝑌𝑍\n  [re_az, chr => str(0x1d44e + idx_az(chr))]  // 𝑎𝑏𝑐𝑑𝑒𝑓𝑔𝑕𝑖𝑗𝑘𝑙𝑚𝑛𝑜𝑝𝑞𝑟𝑠𝑡𝑢𝑣𝑤𝑥𝑦𝑧\n)\n\nexport const boldItalic = replace(\n  [re_AZ, chr => str(0x1d468 + idx_az(chr))], // 𝑨𝑩𝑪𝑫𝑬𝑭𝑮𝑯𝑰𝑱𝑲𝑳𝑴𝑵𝑶𝑷𝑸𝑹𝑺𝑻𝑼𝑽𝑾𝑿𝒀𝒁\n  [re_az, chr => str(0x1d482 + idx_az(chr))]  // 𝒂𝒃𝒄𝒅𝒆𝒇𝒈𝒉𝒊𝒋𝒌𝒍𝒎𝒏𝒐𝒑𝒒𝒓𝒔𝒕𝒖𝒗𝒘𝒙𝒚𝒛\n)\n","import { replace, str, re_AZ, re_az, re_09, idx_az, idx_09 } from './util'\n\nexport const regular = replace(\n  [re_AZ, chr => str(0x1d5a0 + idx_az(chr))], // 𝖠𝖡𝖢𝖣𝖤𝖥𝖦𝖧𝖨𝖩𝖪𝖫𝖬𝖭𝖮𝖯𝖰𝖱𝖲𝖳𝖴𝖵𝖶𝖷𝖸𝖹\n  [re_az, chr => str(0x1d5ba + idx_az(chr))], // 𝖺𝖻𝖼𝖽𝖾𝖿𝗀𝗁𝗂𝗃𝗄𝗅𝗆𝗇𝗈𝗉𝗊𝗋𝗌𝗍𝗎𝗏𝗐𝗑𝗒𝗓\n  [re_09, chr => str(0x1d7e2 + idx_09(chr))]  // 𝟢𝟣𝟤𝟥𝟦𝟧𝟨𝟩𝟪𝟫\n)\n\nexport const bold = replace(\n  [re_AZ, chr => str(0x1d5d4 + idx_az(chr))], // 𝗔𝗕𝗖𝗗𝗘𝗙𝗚𝗛𝗜𝗝𝗞𝗟𝗠𝗡𝗢𝗣𝗤𝗥𝗦𝗧𝗨𝗩𝗪𝗫𝗬𝗭\n  [re_az, chr => str(0x1d5ee + idx_az(chr))], // 𝗮𝗯𝗰𝗱𝗲𝗳𝗴𝗵𝗶𝗷𝗸𝗹𝗺𝗻𝗼𝗽𝗾𝗿𝘀𝘁𝘂𝘃𝘄𝘅𝘆𝘇\n  [re_09, chr => str(0x1d7ec + idx_09(chr))]  // 𝟬𝟭𝟮𝟯𝟰𝟱𝟲𝟳𝟴𝟵\n)\n\nexport const italic = replace(\n  [re_AZ, chr => str(0x1d608 + idx_az(chr))], // 𝘈𝘉𝘊𝘋𝘌𝘍𝘎𝘏𝘐𝘑𝘒𝘓𝘔𝘕𝘖𝘗𝘘𝘙𝘚𝘛𝘜𝘝𝘞𝘟𝘠𝘡\n  [re_az, chr => str(0x1d622 + idx_az(chr))]  // 𝘢𝘣𝘤𝘥𝘦𝘧𝘨𝘩𝘪𝘫𝘬𝘭𝘮𝘯𝘰𝘱𝘲𝘳𝘴𝘵𝘶𝘷𝘸𝘹𝘺𝘻\n)\n\nexport const boldItalic = replace(\n  [re_AZ, chr => str(0x1d63c + idx_az(chr))], // 𝘼𝘽𝘾𝘿𝙀𝙁𝙂𝙃𝙄𝙅𝙆𝙇𝙈𝙉𝙊𝙋𝙌𝙍𝙎𝙏𝙐𝙑𝙒𝙓𝙔𝙕\n  [re_az, chr => str(0x1d656 + idx_az(chr))]  // 𝙖𝙗𝙘𝙙𝙚𝙛𝙜𝙝𝙞𝙟𝙠𝙡𝙢𝙣𝙤𝙥𝙦𝙧𝙨𝙩𝙪𝙫𝙬𝙭𝙮𝙯\n)\n","import { replace, str, re_AZ, re_az, re_aZ, re_fw, re_09, idx, idx_az, idx_09 } from './util'\nimport * as fractur from './fractur'\nimport * as script from './script'\nimport * as serif from './serif'\nimport * as sansSerif from './sans-serif'\n\nexport const fullwidth = replace(\n  [re_fw, chr => str(0xfee0 + idx(chr))]\n)\n\nexport const regional = replace(\n  [re_aZ, chr => str(0x1f1e6 + idx_az(chr))]\n)\n\nexport const monospace = replace(\n  [re_AZ, chr => str(0x1d670 + idx_az(chr))], // 𝙰𝙱𝙲𝙳𝙴𝙵𝙶𝙷𝙸𝙹𝙺𝙻𝙼𝙽𝙾𝙿𝚀𝚁𝚂𝚃𝚄𝚅𝚆𝚇𝚈𝚉\n  [re_az, chr => str(0x1d68a + idx_az(chr))], // 𝚊𝚋𝚌𝚍𝚎𝚏𝚐𝚑𝚒𝚓𝚔𝚕𝚖𝚗𝚘𝚙𝚚𝚛𝚜𝚝𝚞𝚟𝚠𝚡𝚢𝚣\n  [re_09, chr => str(0x1d7f6 + idx_09(chr))]  // 𝟶𝟷𝟸𝟹𝟺𝟻𝟼𝟽𝟾𝟿\n)\n\nexport const doubleStruck = replace(\n  [re_AZ, chr => str(0x1d538 + idx_az(chr))], // 𝔸𝔹𝔺𝔻𝔼𝔽𝔾𝔿𝕀𝕁𝕂𝕃𝕄𝕅𝕆𝕇𝕈𝕉𝕊𝕋𝕌𝕍𝕎𝕏𝕐𝕑\n  [re_az, chr => str(0x1d552 + idx_az(chr))], // 𝕒𝕓𝕔𝕕𝕖𝕗𝕘𝕙𝕚𝕛𝕜𝕝𝕞𝕟𝕠𝕡𝕢𝕣𝕤𝕥𝕦𝕧𝕨𝕩𝕪𝕫\n  [re_09, chr => str(0x1d7d8 + idx_09(chr))]  // 𝟘𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡\n)\n\nexport { fractur, script, serif, sansSerif }\n","import { get } from '../object'\n\nexport const f = <T>([ head, ...tail ]: TemplateStringsArray, ...fns: ((arg: T) => any)[]) =>\n  (arg: T) => fns.reduce((acc, fn, i) => acc + fn(arg) + tail[i], head)\n\nexport const format = (re: RegExp) => (tmpl: string) =>\n  (...args: any[]) => tmpl.replace(re, (_, path) => get(args, path))\n\nexport const brackets = format(/{(.*?)}/g)\nexport const hashBrackets = format(/#{(.*?)}/g)\nexport const dollarBrackets = format(/\\${(.*?)}/g)\nexport const doubleBrackets = format(/{{(.*?)}}/g)\n","import { and, or } from '../re'\nimport { proto } from '../object'\n\nexport const compiler = (exprʹ = '{', exprʺ = '}', ctrlʹ = '{#', ctrlʺ = '#}') => {\n  const expr = and()(exprʹ, /(?<expr>[^]*?)/, exprʺ)\n  const ctrl = and()(ctrlʹ, /(?<ctrl>[^]*?)/, ctrlʺ)\n\n  // match the longest tag first to avoid ambiguity\n  const re = exprʹ.length > ctrlʹ.length\n    ? or('ug')(expr, ctrl)\n    : or('ug')(ctrl, expr)\n\n  return (macro: string, scope = {}, ref = '$', acc = 'Σ') => {\n    let ops = ''\n\n    for (let op = '=', cursor = 0;;) {\n      const match = re.exec(macro)\n      const part = match\n        ? macro.slice(cursor, cursor = match.index)\n        : macro.slice(cursor)\n\n      ops += op + JSON.stringify(part)\n\n      if (!match)\n        break\n\n      const { expr, ctrl } = match.groups!\n      ops += ctrl ? `;${ctrl};` : `+(${expr})`\n      op = ctrl ? `${acc}+=` : '+'\n      cursor += match[0].length\n    }\n\n    const body = `let ${acc}${ops};return ${acc}`\n    const fn = new Function(`{${[...proto(scope)]}}`, ref, body)\n    return fn.bind(null, scope) as (context?: {}) => string\n  }\n}\n\nexport const compile = compiler()\n","// tslint:disable:curly\nconst ESCAPE = /\\\\/\nconst QUOTE = /'|\"/\nconst SPACE = /\\s/\n\nexport const split = function* (input: string) {\n  let escape = false\n  let quote = null\n  let arg = null\n\n  for (const char of input) {\n    const isEscape = ESCAPE.test(char)\n    const isQuote = QUOTE.test(char)\n    const isSpace = SPACE.test(char)\n\n    if (!isSpace && arg == null)\n      arg = ''\n\n    if (escape) {\n      arg += char\n      escape = false\n    }\n    else if (isEscape) {\n      escape = true\n    }\n    else if (isQuote && !quote) {\n      quote = char\n    }\n    else if (isQuote && quote === char) {\n      quote = null\n    }\n    else if (isSpace && !quote && arg != null) {\n      yield arg\n      arg = null\n    }\n    else if (arg != null) {\n      arg += char\n    }\n  }\n\n  if (escape || quote)\n    throw new SyntaxError\n\n  if (arg != null)\n    yield arg\n}\n","import { proto } from '../object'\n\nexport const renderer = (tmpl: string, scope = {}, ref = '$'): (context?: {}) => string =>\n  new Function(`{${[...proto(scope)]}}`, ref, `return \\`${tmpl}\\``).bind(null, scope)\n\nexport const render = (tmpl: string, context = {}, ref = '$'): string =>\n  new Function(`{${[...proto(context)]}}`, ref, `return \\`${tmpl}\\``)(context, context)\n","import { min } from '../math'\n\nexport const levenshtein = (a: string, b: string) => {\n  const vec = new Uint32Array(a.length + 1)\n\n  for (let y = 1; y <= a.length; y++)\n    vec[y] = y\n\n  for (let x = 1; x <= b.length; x++) {\n    vec[0] = x\n    for (let last = x-1, y = 1; y <= a.length; y++) {\n      const tmp = vec[y]\n      vec[y] = min(vec[y]+1, vec[y-1]+1, last + +(a[y-1] !== b[x-1]))\n      last = tmp\n    }\n  }\n\n  return vec[a.length]\n}\n","const spaces = /(?:\\n|\\t|\\p{Z})/ug\nconst unsafe = /(?!\\n)(?:\\p{Cc}|\\p{Cf}|\\p{Cn}|\\p{Co}|\\p{Mn})/ug\n\nexport const sanitize = (text: string) => text\n  .normalize('NFKC')\n  .replace(spaces, ' ')\n  .replace(unsafe, '')\n","export const tuple = <T extends [void] | {}>(arr: T) => arr\n\nexport const firstNonNull = <T>(...args: (T | null | undefined)[]) => {\n  for (const arg of args)\n    if (arg != null)\n      return arg\n}\n","export const doctype = (html: string) =>\n  '<!doctype html>' + html\n\nexport const minify = (html: string) =>\n  html.replace(/\\s*(^|$|[<>])\\s*/g, '$1')\n\nexport const encode = (arg: string) =>\n  arg.replace(/[<>&\"]/g, c => `&#${c.charCodeAt(0)};`)\n"],"names":["abs","acos","acosh","asin","asinh","atan","atan2","atanh","cbrt","ceil","clz32","cos","cosh","exp","expm1","floor","fround","hypot","imul","log","log10","log1p","log2","max","min","pow","random","round","sign","sin","sinh","sqrt","tan","tanh","trunc","E","LN10","LN2","LOG10E","LOG2E","PI","SQRT1_2","SQRT2","Math","isFinite","isInteger","isNaN","isSafeInteger","parseFloat","parseInt","EPSILON","MAX_SAFE_INTEGER","MAX_VALUE","MIN_SAFE_INTEGER","MIN_VALUE","NEGATIVE_INFINITY","POSITIVE_INFINITY","Number","fit","fn","width","height","widthʹ","heightʹ","contain","cover","TAU","π","τ","clamp","a","b","t","lerp","norm","aʹ","bʹ","aʺ","bʺ","Kp","Ki","Kd","M","Infinity","tʹ","eʹ","Σe","e","Δt","Δe","items","length","i","j","total","reduce","acc","w","r","item","Error","arr","cmp","keys","sort","at","x","y","order","z","size","area","lut","Float32Array","reverseByte","encodeByte","renderLine","line","String","fromCharCode","Array","from","encodeLine","dot","input","c","decodeByte","charCodeAt","R","G","B","lum","g","rgb","canvas","map","join","Uint8Array","h","lines","byte","push","imageData","data","xy00","xy10","xy01","xy11","xy02","xy12","xy03","xy13","b0","b1","b2","b3","charCodes","rgbʹ","rʹ","gʹ","core","cosx","sinx","start","rots","hue","s","l","srgb","hʹ","sʹ","randomʹ","i.lum","i.r","i.g","i.b","toString","slice","rgbʺ","i.rgb","f.r","f.g","f.b","deepCopy","arg","isArray","obj","proto","Object","getPrototypeOf","props","getOwnPropertyDescriptors","key","value","create","mapObject","extend","assign","overwrite","get","object","path","sep","split","o","next","Set","prototype","getOwnPropertyNames","forEach","prop","add","element","name","attributes","document","createElement","settings","getContext","parent","children","child","appendChild","event","preventDefault","Promise","resolve","requestAnimationFrame","factory","polynomial","bytes","previous","hash","crc32","crc32c","seed","lcg","N","seed0","seed1","seed2","seed3","state","Uint32Array","n","index","d","mat1","mat2","tmat","m","escape","RegExp","source","replace","re","flags","first","rest","args","parts","and","or","mapArgs","tag","strings","mapStrings","mapResult","identity","raw","fnArg","fnStr","fnRes","str","fromCodePoint","idx","chr","codePointAt","idx_az","idx_09","re_az","re_AZ","steps","text","format","tmpl","_","brackets","hashBrackets","dollarBrackets","doubleBrackets","head","tail","fns","compiler","exprʹ","exprʺ","ctrlʹ","ctrlʺ","expr","ctrl","macro","scope","ref","ops","op","cursor","match","exec","part","JSON","stringify","groups","body","Function","bind","compile","ESCAPE","QUOTE","SPACE","context","vec","last","tmp","normalize","quote","char","isEscape","test","isQuote","isSpace","SyntaxError","html"],"mappings":"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"}