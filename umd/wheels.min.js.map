{"version":3,"file":"wheels.min.js","sources":["../src/math/easing.ts","../src/math/native.ts","../src/math/fit.ts","../src/math/extensions.ts","../src/math/pid.ts","../src/array/index.ts","../src/bayer/index.ts","../src/braille/canvas.ts","../src/fp/iter.ts","../src/braille/encoding.ts","../src/color/rgb/constants.ts","../src/color/rgb/i.ts","../src/braille/render-image-data.ts","../src/color/rgb/f.ts","../src/color/srgb.ts","../src/color/cubehelix.ts","../src/color/hsl.ts","../src/color/rgb/index.ts","../src/color/rgb/operations.ts","../src/color/sinebow.ts","../src/object/index.ts","../src/dom/index.ts","../src/fp/logic.ts","../src/fp/math.ts","../src/hash/crc32.ts","../src/hash/joaat.ts","../src/prng/alea.ts","../src/prng/lcg.ts","../src/prng/mt.ts","../src/prng/lfsr.ts","../src/prng/tmt.ts","../src/prng/well.ts","../src/prng/xs.ts","../src/tag/index.ts","../src/re/index.ts","../src/text/fonts.ts","../src/text/format.ts","../src/text/split.ts","../src/text/levenshtein.ts","../src/text/sanitize.ts","../src/util/index.ts","../src/html/index.ts"],"sourcesContent":["export type IEasing = (t: number) => number\n\nexport const\n  smoothstep:   IEasing = t => t*t*(3 - 2*t),\n  smootherstep: IEasing = t => t*t*t*(t*(t*6 - 15) + 10)\n\nexport const\n  linear:       IEasing = t => t,\n  in2:          IEasing = t => t*t,\n  in3:          IEasing = t => t*t*t,\n  in4:          IEasing = t => t*t*t*t,\n  in5:          IEasing = t => t*t*t*t*t,\n  out2:         IEasing = t => t*(2-t),\n  out3:         IEasing = t => (--t)*t*t+1,\n  out4:         IEasing = t => 1-(--t)*t*t*t,\n  out5:         IEasing = t => 1+(--t)*t*t*t*t,\n  inOut2:       IEasing = t => t<.5 ? 2*t*t : -1+(4-2*t)*t,\n  inOut3:       IEasing = t => t<.5 ? 4*t*t*t : (t-1)*(2*t-2)*(2*t-2)+1,\n  inOut4:       IEasing = t => t<.5 ? 8*t*t*t*t : 1-8*(--t)*t*t*t,\n  inOut5:       IEasing = t => t<.5 ? 16*t*t*t*t*t : 1+16*(--t)*t*t*t*t\n","export const {\n  abs, acos, acosh, asin, asinh, atan, atan2, atanh, cbrt, ceil, clz32,\n  cos, cosh, exp, expm1, floor, fround, hypot, imul, log, log10, log1p,\n  log2, max, min, pow, random, round, sign, sin, sinh, sqrt, tan, tanh,\n  trunc, E, LN10, LN2, LOG10E, LOG2E, PI, SQRT1_2, SQRT2\n} = Math\n\nexport const {\n  isFinite,\n  isInteger,\n  isNaN,\n  isSafeInteger,\n  parseFloat,\n  parseInt,\n  EPSILON,\n  MAX_SAFE_INTEGER,\n  MAX_VALUE,\n  MIN_SAFE_INTEGER,\n  MIN_VALUE,\n  NEGATIVE_INFINITY,\n  POSITIVE_INFINITY\n} = Number\n","import { min, max } from './native'\n\nconst fit = (fn: typeof min | typeof max) =>\n  (width: number, height: number) =>\n    (widthʹ: number, heightʹ: number) =>\n      fn(width/widthʹ, height/heightʹ)\n\nexport const contain = fit(min)\nexport const cover   = fit(max)\n","import { EPSILON, PI, E, min, max } from './native'\n\nexport type n = number\n\nexport const\n  TAU = 2 * PI,\n  PHI = 5 ** .5 * .5 + .5\n\nexport const\n  e = E,\n  ε = EPSILON,\n  π = PI,\n  τ = TAU,\n  ϕ = PHI\n\nexport const\n  add = (a: n, b: n) => a + b,\n  sub = (a: n, b: n) => a - b,\n  mul = (a: n, b: n) => a * b,\n  div = (a: n, b: n) => a / b\n\nexport const\n  clamp = (a: n, b: n, t: n) => min(max(a, t), b),\n  lerp  = (a: n, b: n, t: n) => a + t * (b - a),\n  norm  = (a: n, b: n, t: n) => (t - a) / (b - a),\n  map   = (aʹ: n, bʹ: n, aʺ: n, bʺ: n, t: n) => lerp(aʺ, bʺ, norm(aʹ, bʹ, t))\n","import { ε, clamp } from './extended'\n\nexport const pid = (Kp: number, Ki: number, Kd: number, M = Infinity) => {\n  let tʹ: number\n  let eʹ: number\n  let Σe = 0\n\n  return (PV: number, SP: number, t: number) => {\n    const e = SP - PV\n    const Δt = t - tʹ || ε\n    const Δe = e - eʹ || 0\n\n    tʹ = t\n    eʹ = e\n    Σe = clamp(-M, M, Σe + e*Δt)\n\n    return Kp*e + Ki*Σe + Kd*Δe/Δt\n  }\n}\n","import { random } from '../math'\n\nexport const pick = <T>(items: ArrayLike<T>) =>\n  items[items.length * random() | 0]\n","export const at = (x: number, y: number, order: number) => {\n  let z = 0\n  for (let i = order; i--; x >>= 1, y >>= 1)\n    z = (x&1 ^ y&1 | z<<1)<<1 | y&1\n  return z + .5\n}\n\nexport const lut = (order: number) => {\n  const size = 1<<order, area = size*size\n  const lut = new Float32Array(area)\n  for (let y = 0; y < size; y++)\n    for (let x = 0; x < size; x++)\n      lut[x + y*size] = at(x, y, order) / area\n  return (x: number, y: number) => lut[x%size + y%size*size]\n}\n","export type ICanvas = Uint8Array[]\nexport type ICanvasCreate = (width: number, height: number) => ICanvas\nexport type ICanvasMutate = (canvas: ICanvas, x: number, y: number) => number\nexport type ICanvasRender = (canvas: ICanvas) => string\n\nconst enc = (x: number) => (x&0x08)<<3 | (x&0x70)>>1 | (x&0x87) | 0x2800\nconst row = (x: Uint8Array) => String.fromCharCode(...Array.from(x, enc))\n\nexport const create: ICanvasCreate = (width, height) =>\n  Array.from(Array(height>>2), () => new Uint8Array(width>>1))\n\nexport const toggle: ICanvasMutate = (canvas, x, y) =>\n  canvas[y>>2][x>>1] ^= 1<<((y&3)|(x&1)<<2)\n\nexport const set: ICanvasMutate = (canvas, x, y) =>\n  canvas[y>>2][x>>1] |= 1<<((y&3)|(x&1)<<2)\n\nexport const unset: ICanvasMutate = (canvas, x, y) =>\n  canvas[y>>2][x>>1] &= ~(1<<((y&3)|(x&1)<<2))\n\nexport const render: ICanvasRender = canvas =>\n  canvas.map(row).join('\\n')\n","export const filter = <T>(fn: (arg: T) => boolean) => function* (it: Iterable<T>) {\n  for (const value of it)\n    if (fn(value))\n      yield value\n}\n\nexport const map = <T, U>(fn: (arg: T) => U) => function* (it: Iterable<T>) {\n  for (const value of it)\n    yield fn(value)\n}\n\nexport const reduce = <T, U>(fn: (acc: U, arg: T) => U) => (acc: U) => (it: Iterable<T>) => {\n  let accʹ = acc\n  for (const value of it)\n    accʹ = fn(accʹ, value)\n  return accʹ\n}\n\nexport const range = function* (min: number, max: number, step = 1) {\n  for (let number = min; number < max; number += step)\n    yield number\n}\n\nexport const matcher = (re: RegExp) => function* (input: string) {\n  for (let match; match = re.exec(input);)\n    yield match\n}\n","import { map } from '../fp/iter'\n\nexport const decodeByte = (n: number) =>\n  (n&0x01)<<7 | (n&0x02)<<5 | (n&0x04)<<3 | (n&0x08) |\n  (n&0x10)>>2 | (n&0x20)>>4 | (n&0x40)>>2 | (n&0x80)>>7\n\nexport const encodeByte = (n: number) =>\n  (n&0x01)<<7 | (n&0x02)<<4 | (n&0x04)<<2 | (n&0x08) |\n  (n&0x10)<<2 | (n&0x20)>>3 | (n&0x40)>>5 | (n&0x80)>>7 | 0x2800\n\nexport const encode = (bytes: Iterable<number>) =>\n  String.fromCharCode(...map(encodeByte)(bytes))\n\nexport const decode = (str: string) =>\n  Array.from(str, c => decodeByte(c.charCodeAt(0)))\n","export const R = .212655\nexport const G = .715158\nexport const B = .072187\n","import { R, G, B } from './constants'\n\nexport const lum = (r: number, g: number, b: number) =>\n  (R*r + G*g + B*b) / 0xff\n\nexport const rgb = (r: number, g: number, b: number) =>\n  (0xff & r)<<16 | (0xff & g)<<8 | (0xff & b)\n\nexport const r = (rgb: number) => 0xff & rgb>>16\nexport const g = (rgb: number) => 0xff & rgb>>8\nexport const b = (rgb: number) => 0xff & rgb\n","import { lum } from '../color/rgb/i'\n\nconst enum CharCode {\n  newline = 0xa,\n  braille = 0x2800\n}\n\nconst charCodes = function* ({ width, height, data }: ImageData) {\n  const\n    xy00 = 0x0*width, xy10 = 0x4+xy00,\n    xy01 = 0x4*width, xy11 = 0x4+xy01,\n    xy02 = 0x8*width, xy12 = 0x4+xy02,\n    xy03 = 0xc*width, xy13 = 0x4+xy03\n\n  for (let y = 0; y < height; y += 4) {\n    for (let x = 0; x < width; x += 2) {\n      const\n        r = x + y*width << 2,\n        g = r | 1,\n        b = r | 2\n\n      const\n        b0 = lum(data[r+xy00], data[g+xy00], data[b+xy00]), // ⣾\n        b1 = lum(data[r+xy01], data[g+xy01], data[b+xy01]), // ⣽\n        b2 = lum(data[r+xy02], data[g+xy02], data[b+xy02]), // ⣻\n        b3 = lum(data[r+xy03], data[g+xy03], data[b+xy03]), // ⢿\n        b4 = lum(data[r+xy10], data[g+xy10], data[b+xy10]), // ⣷\n        b5 = lum(data[r+xy11], data[g+xy11], data[b+xy11]), // ⣯\n        b6 = lum(data[r+xy12], data[g+xy12], data[b+xy12]), // ⣟\n        b7 = lum(data[r+xy13], data[g+xy13], data[b+xy13])  // ⡿\n\n      const byte =\n        .5+b0 << 0 | .5+b4 << 3 | // ●₀ ●₃\n        .5+b1 << 1 | .5+b5 << 4 | // ●₁ ●₄\n        .5+b2 << 2 | .5+b6 << 5 | // ●₂ ●₅\n        .5+b3 << 6 | .5+b7 << 7   // ○₆ ○₇\n\n      yield CharCode.braille | byte\n    }\n    yield CharCode.newline\n  }\n}\n\nexport const renderImageData = (imageData: ImageData) =>\n  String.fromCharCode(...charCodes(imageData))\n","import { r as rʹ, g as gʹ, b as bʹ, rgb as rgbʹ } from './i'\nimport { R, G, B } from './constants'\n\nexport const lum = (r: number, g: number, b: number) =>\n  R*r + G*g + B*b\n\nexport const rgb = (r: number, g: number, b: number) =>\n  rgbʹ(.5 + 0xff*r, .5 + 0xff*g, .5 + 0xff*b)\n\nexport const r = (rgb: number) => rʹ(rgb) / 0xff\nexport const g = (rgb: number) => gʹ(rgb) / 0xff\nexport const b = (rgb: number) => bʹ(rgb) / 0xff\n","export const rgb = (srgb: number) =>\n  srgb<=0.04045 ? srgb/12.92 : ((srgb+0.055)/1.055)**2.4\n\nexport const srgb = (rgb: number) =>\n  rgb<=0.0031308 ? rgb*12.92 : (rgb**(1/2.4))*1.055 - 0.055\n","import { τ, cos, sin, clamp } from '../math'\nimport { rgb } from './rgb/f'\n\nconst xyz = (x: number, y: number, z: number) => {\n  const cosx = cos(x), sinx = sin(x)\n  const r = clamp(0, 1, z + y*(-0.14861*cosx + +1.78277*sinx))\n  const g = clamp(0, 1, z + y*(-0.29227*cosx + -0.90649*sinx))\n  const b = clamp(0, 1, z + y*(+1.97294*cosx))\n  return rgb(r, g, b)\n}\n\nexport const cubehelix = (\n  hʹ = -1/6, sʹ = 1, lʹ = 0,\n  hʺ = -5/3, sʺ = 1, lʺ = 1\n) => (t: number) => {\n  const h = hʹ + t*(hʺ - hʹ)\n  const s = sʹ + t*(sʺ - sʹ)\n  const l = lʹ + t*(lʺ - lʹ)\n  return xyz(τ*(h+1/3), .5*s*l*(1-l), l)\n}\n\n// export const classic = (start = .5, rots = -1.5, hue = 1) =>\n//   (t: number) => xyz(τ*(start/3+rots*t), .5*hue*t*(1-t), t)\n\n// export default (t: number) =>\n//   xyz(π*(1/3-3*t), .5*t*(1-t), t)\n","import { abs, clamp } from '../math'\nimport { rgb } from './rgb/f'\n\nexport const hsl = (h: number, s: number, l: number) => {\n  const hʹ = h%1, sʹ = s*(.5-abs(.5-l))\n  const r = l + sʹ*clamp(-1, 1, 12*abs((3/3-hʹ)%1-.5)-3)\n  const g = l + sʹ*clamp(-1, 1, 12*abs((4/3-hʹ)%1-.5)-3)\n  const b = l + sʹ*clamp(-1, 1, 12*abs((5/3-hʹ)%1-.5)-3)\n  return rgb(r, g, b)\n}\n","import { floor, random as randomʹ } from '../../math'\nimport * as i from './i'\nimport * as f from './f'\n\nexport const random = () =>\n  floor(randomʹ() * 0x1000000)\n\nexport const lum = (rgb: number) =>\n  i.lum(i.r(rgb), i.g(rgb), i.b(rgb))\n\nexport const hex = (rgb: number) =>\n  '#' + ('00000' + floor(rgb).toString(16)).slice(-6)\n\nexport { i, f }\nexport * from './constants'\nexport * from './operations'\n","import { min, max, lerp } from '../../math'\nimport * as i from './i'\nimport * as f from './f'\n\nexport const add = (rgbʹ: number, rgbʺ: number) => i.rgb(\n  min(i.r(rgbʹ) + i.r(rgbʺ), 0xff),\n  min(i.g(rgbʹ) + i.g(rgbʺ), 0xff),\n  min(i.b(rgbʹ) + i.b(rgbʺ), 0xff)\n)\n\nexport const sub = (rgbʹ: number, rgbʺ: number) => i.rgb(\n  max(i.r(rgbʹ) - i.r(rgbʺ), 0),\n  max(i.g(rgbʹ) - i.g(rgbʺ), 0),\n  max(i.b(rgbʹ) - i.b(rgbʺ), 0)\n)\n\nexport const mul = (rgbʹ: number, rgbʺ: number) => i.rgb(\n  f.r(rgbʹ) * i.r(rgbʺ) + .5,\n  f.g(rgbʹ) * i.g(rgbʺ) + .5,\n  f.b(rgbʹ) * i.b(rgbʺ) + .5\n)\n\nexport const mix = (rgbʹ: number, rgbʺ: number) => (t: number) => i.rgb(\n  lerp(i.r(rgbʹ), i.r(rgbʺ), t),\n  lerp(i.g(rgbʹ), i.g(rgbʺ), t),\n  lerp(i.b(rgbʹ), i.b(rgbʺ), t)\n)\n","import { τ, cos, abs } from '../math'\nimport { rgb } from './rgb/f'\n\nexport const sinebow = (h: number, s: number, l: number) => {\n  const sʹ = s*(.5-abs(.5-l))\n  const r = l + sʹ*cos(τ*(0/3-h))\n  const g = l + sʹ*cos(τ*(1/3-h))\n  const b = l + sʹ*cos(τ*(2/3-h))\n  return rgb(r, g, b)\n}\n","export const extend: typeof Object.assign = Object.assign\n\nexport const overwrite: <T>(target: T, ...sources: Partial<T>[]) => T = extend\n\nexport const copy = <T>(object: T) => overwrite({} as T, object)\n\nexport const get = (object: any, path: string, sep = '.') =>\n  path.split(sep).reduce((o, next) => o && o[next], object)\n\nexport const proto = <T>(object: T) => {\n  const props = new Set<keyof T | 'constructor'>()\n  for (let o = object; o && o !== Object.prototype; o = Object.getPrototypeOf(o))\n    Object.getOwnPropertyNames(o).forEach(prop => props.add(prop as any))\n  return props\n}\n","import { overwrite } from '../object'\n\nexport type IElement = <N extends keyof HTMLElementTagNameMap>(name: N) =>\n  (options?: Partial<HTMLElementTagNameMap[N]>) => HTMLElementTagNameMap[N]\n\nexport const element: IElement = name => options =>\n  overwrite(document.createElement(name), options!)\n\nexport const append = (parent: Element) => (...children: Element[]) =>\n  children.forEach(child => parent.appendChild(child))\n\nexport const prevent = <E extends Event>(fn?: (event: E) => any) =>\n  (event: E) => event.preventDefault() || fn && fn(event)\n\nexport const frame = () =>\n  new Promise(resolve => requestAnimationFrame(resolve))\n\nexport const context2d = (options?: Partial<HTMLCanvasElement>) =>\n  element('canvas')(options).getContext('2d')!\n","import { reduce } from './iter'\n\nexport type Predicate<A> = (arg: A) => boolean\n\nexport const not = <A>(predicate: Predicate<A>): Predicate<A> =>\n  arg => !predicate(arg)\n\nexport const and = <A>(...predicates: Predicate<A>[]): Predicate<A> =>\n  arg => reduce((acc: boolean, p: Predicate<A>) => acc && p(arg))(true)(predicates)\n\nexport const or = <A>(...predicates: Predicate<A>[]): Predicate<A> =>\n  arg => reduce((acc: boolean, p: Predicate<A>) => acc || p(arg))(false)(predicates)\n","import { add as addʹ, mul as mulʹ } from '../math'\nimport { reduce } from './iter'\n\nexport const\n  sum     = reduce(addʹ)(0),\n  product = reduce(mulʹ)(0)\n\nexport const\n  add = (b: number) => (a: number) => a + b,\n  sub = (b: number) => (a: number) => a - b,\n  mul = (b: number) => (a: number) => a * b,\n  div = (b: number) => (a: number) => a / b\n","export const generic = (polynomial: number) => (bytes: ArrayLike<number>, previous = 0) => {\n  let hash = ~previous\n  for (let j, i = 0; i < bytes.length; i++)\n    for (hash ^= bytes[i], j = 8; j--;)\n      hash = hash>>>1 ^ (hash&1 && polynomial)\n  return ~hash >>> 0\n}\n\nexport const crc32  = generic(0xEDB88320)\nexport const crc32c = generic(0x82F63B78)\n","export const joaat = (bytes: ArrayLike<number>) => {\n  let hash = 0\n  for (let i = 0; i < bytes.length; i++) {\n    hash += bytes[i]\n    hash += hash << 10\n    hash ^= hash >>> 6\n  }\n  hash += hash << 3\n  hash ^= hash >>> 11\n  hash += hash << 15\n  return hash >>> 0\n}\n","export const alea = (seed0 = 1, seed1 = 1, seed2 = 1, seed3 = 1) => {\n  let x = (seed0 >>> 0) / 0x100000000\n  let y = (seed1 >>> 0) / 0x100000000\n  let z = (seed2 >>> 0) / 0x100000000\n  let w = (seed3 >>> 0)\n\n  return () => {\n    const t = 2091639*x + w/0x100000000\n    return x = y, y = z, z = t - (w = t|0)\n  }\n}\n","export const generic = (a: number, c: number) => (seed = 1) => {\n  let x = seed\n  return () => x = x*a + c >>> 0\n}\n\nexport const lcg = generic(1664525, 1013904223) // Numerical Recipes\n","import { imul } from '../math'\n\nconst N = 624\nconst M = 397\nconst MATRIX_A   = 0x9908b0df\nconst UPPER_MASK = 0x80000000\nconst LOWER_MASK = 0x7fffffff\n\nexport const mt = (seed = 1) => {\n  const state = new Uint32Array(N)\n  for (let n = state[0] = seed, i = 1; i < N; i++) {\n    n = n ^ n>>>30\n    n = state[i] = i + imul(n, 0x6C078965)\n  }\n\n  let index = N\n  return () => {\n    const a = state[index %= N]\n    const b = state[(index + 1) % N]\n    const c = state[(index + M) % N]\n    const d = a&UPPER_MASK | b&LOWER_MASK\n    let n = state[index++] = c ^ d>>>1 ^ (d&1 && MATRIX_A)\n    n ^= n >>> 11\n    n ^= n <<   7 & 0x9D2C5680\n    n ^= n <<  15 & 0xEFC60000\n    n ^= n >>> 18\n    return n >>> 0\n  }\n}\n","export const lfsr = (seed0 = 0, seed1 = 0, seed2 = 0, seed3 = 0) => {\n  let x = seed0 + 0x02\n  let y = seed1 + 0x08\n  let z = seed2 + 0x10\n  let w = seed3 + 0x80\n\n  return () => {\n    x = (x & 0xFFFFFFFE) << 18 ^ (x ^ x <<  6) >>> 13\n    y = (y & 0xFFFFFFF8) <<  2 ^ (y ^ y <<  2) >>> 27\n    z = (z & 0xFFFFFFF0) <<  7 ^ (z ^ z << 13) >>> 21\n    w = (w & 0xFFFFFF80) << 13 ^ (w ^ w <<  3) >>> 12\n    return (x ^ y ^ z ^ w) >>> 0\n  }\n}\n","import { imul } from '../math'\n\nconst state = (...state: number[]) => {\n  for (let n = state[0], i = 1; i < 8; i++) {\n    n = n ^ n>>>30\n    n = state[i & 3] ^= i + imul(n, 0x6C078965)\n  }\n  return state\n}\n\nexport const tmt = (seed = 1, mat1 = 0x8F7011EE, mat2 = 0xFC78FF1F, tmat = 0x3793FDFF) => {\n  let [ x, y, z, w ] = state(seed, mat1, mat2, tmat)\n\n  return () => {\n    let n = 0x7FFFFFFF&x ^ y ^ z\n    let m = w\n    n ^= n <<  1\n    m ^= m >>> 1 ^ n\n\n    x = y\n    y = z\n    z = n ^ m << 10\n    w = m\n    y ^= -(m & 1) & mat1\n    z ^= -(m & 1) & mat2\n\n    m = x + (z >>> 8)\n    n = w ^ m\n    n ^= -(m & 1) & tmat\n    return n >>> 0\n  }\n}\n","export const well = (seed = 1) => {\n  const state = [ seed ]\n  let a, b, c, d, index = 0\n\n  return () => {\n    a = state[index]\n    c = state[index + 13 & 15]\n    b = a ^ c ^ a<<16 ^ c<<15\n    c = state[index + 9 & 15]\n    c = c ^ c>>>11\n    a = state[index] = b ^ c\n    d = a ^ a<<5 & 0xDA442D24\n    a = state[index = index + 15 & 15]\n    a = a ^ b ^ d ^ a<<2 ^ b<<18 ^ c<<28\n    return state[index] = a>>>0\n  }\n}\n","export const xs1 = (seed = 1) => {\n  let x = seed\n\n  return () => {\n    x ^= x <<  13\n    x ^= x >>> 17\n    x ^= x <<   5\n    return x >>> 0\n  }\n}\n\nexport const xs4 = (seed0 = 1, seed1 = 1, seed2 = 1, seed3 = 1) => {\n  let x = seed0\n  let y = seed1\n  let z = seed2\n  let w = seed3\n  let t\n\n  return () => {\n    t = x ^ x<<11\n    x = y\n    y = z\n    z = w\n    w = w ^ w>>>19 ^ t ^ t>>>8\n    return w >>> 0\n  }\n}\n","export type Tag<A, R, S = ReadonlyArray<string>> = (strings: S, ...args: A[]) => R\nexport type Map<A, R> = (arg: A) => R\n\nexport const mapArgs = <A, Aʹ, R>(fn: Map<Aʹ, A>, tag: Tag<A, R>): Tag<Aʹ, R> =>\n  (strings, ...args) => tag(strings, ...args.map(fn))\n\nexport const mapStrings = <A, R>(fn: Map<string, any>, tag: Tag<A, R>): Tag<A, R> =>\n  (strings, ...args) => tag(strings.map(fn), ...args)\n\nexport const mapResult = <A, R, Rʹ>(fn: Map<R, Rʹ>, tag: Tag<A, R>): Tag<A, Rʹ> =>\n  (strings, ...args) => fn(tag(strings, ...args))\n\nexport const raw = <A, T>(tag: Tag<A, T>): Tag<A, T, TemplateStringsArray> =>\n  (strings, ...args) => tag(strings.raw, ...args)\n\nexport const tag = <R, A>(fnArg: Map<A, any>, fnStr: Map<string, any>, fnRes: Map<string, R>) =>\n  mapResult(fnRes, mapStrings(fnStr, mapArgs(fnArg, identity)))\n\nexport const identity: Tag<any, string> = ([ first, ...rest ], ...args) =>\n  args.reduce((acc, arg, i) => acc + arg + rest[i], first)\n","import { raw, tag } from '../tag'\n\nconst specialChars = /[\\\\^$.*+?()[\\]{}|]/g\n\nexport const escape = (arg: any) =>\n  arg instanceof RegExp\n    ? arg.source\n    : ('' + arg).replace(specialChars, '\\\\$&')\n\nexport const re = (flags = '') =>\n  raw(tag(escape, x => x, re => RegExp(re, flags)))\n\nexport const join = (sep: string) => (flags = '') => (...parts: any[]) =>\n  RegExp(parts.map(escape).join(sep), flags)\n\nexport const and = join('')\nexport const or = join('|')\n","const str = String.fromCodePoint\n\nconst idx = (chr: string) => chr.codePointAt(0)!\nconst idx_az = (chr: string) => 31 & idx(chr)-1\nconst idx_09 = (chr: string) => 15 & idx(chr)\n\nconst re_09 = /[0-9]/g\nconst re_az = /[a-z]/g\nconst re_AZ = /[A-Z]/g\nconst re_aZ = /[a-zA-Z]/g\n\nexport const monospace = (text: string) => text\n  .replace(re_09, chr => str(0x1d7f6 + idx_09(chr)))\n  .replace(re_az, chr => str(0x1d68a + idx_az(chr)))\n  .replace(re_AZ, chr => str(0x1d670 + idx_az(chr)))\n\nexport const flags = (text: string) => text\n  .replace(re_aZ, chr => str(0x1f1e6 + idx_az(chr)))\n","import { get } from '../object'\n\nexport type IFormat = (...args: any[]) => string\nexport type IFormatTag = <T>([head, ...tail]: ReadonlyArray<string>, ...fns: ((obj: T) => any)[]) => (obj: T) => string\n\nexport const tag: IFormatTag = ([ head, ...tail ], ...fns) =>\n  obj => fns.reduce((acc, fn, i) => acc + fn(obj) + tail[i], head)\n\nexport const format = (re: RegExp) => (tmpl: string): IFormat =>\n  (...args) => tmpl.replace(re, (_, path) => get(args, path))\n\nexport const brackets = format(/{(.*?)}/g)\n\nexport const hashBrackets = format(/#{(.*?)}/g)\n\nexport const dollarBrackets = format(/\\${(.*?)}/g)\n\nexport const doubleBrackets = format(/{{(.*?)}}/g)\n","// tslint:disable:curly\nconst ESCAPE = /\\\\/\nconst QUOTE = /'|\"/\nconst SPACE = /\\s/\n\nexport const split = function* (input: string) {\n  let escape = false\n  let quote = null\n  let arg = null\n\n  for (const char of input) {\n    const isEscape = ESCAPE.test(char)\n    const isQuote = QUOTE.test(char)\n    const isSpace = SPACE.test(char)\n\n    if (!isSpace && arg == null)\n      arg = ''\n\n    if (escape) {\n      arg += char\n      escape = false\n    }\n    else if (isEscape) {\n      escape = true\n    }\n    else if (isQuote && !quote) {\n      quote = char\n    }\n    else if (isQuote && quote === char) {\n      quote = null\n    }\n    else if (isSpace && !quote && arg != null) {\n      yield arg\n      arg = null\n    }\n    else if (arg != null) {\n      arg += char\n    }\n  }\n\n  if (escape || quote)\n    throw new SyntaxError\n\n  if (arg != null)\n    yield arg\n}\n","import { min } from '../math'\n\nexport const levenshtein = (a: string, b: string) => {\n  const vec = new Uint32Array(a.length + 1)\n\n  for (let y = 1; y <= a.length; y++)\n    vec[y] = y\n\n  for (let x = 1; x <= b.length; x++) {\n    vec[0] = x\n    for (let last = x-1, y = 1; y <= a.length; y++) {\n      const tmp = vec[y]\n      vec[y] = min(vec[y]+1, vec[y-1]+1, last + +(a[y-1] !== b[x-1]))\n      last = tmp\n    }\n  }\n\n  return vec[a.length]\n}\n","const spaces = /(?:\\n|\\t|\\p{Z})/ug\nconst unsafe = /(?!\\n)(?:\\p{Cc}|\\p{Cf}|\\p{Cn}|\\p{Co}|\\p{Mn})/ug\n\nexport const sanitize = (text: string) => text\n  .normalize('NFKC')\n  .replace(spaces, ' ')\n  .replace(unsafe, '')\n","export const tuple = <T extends [void] | {}>(arr: T) => arr\n\nexport const firstNonNull = <T>(...args: (T | null | undefined)[]) => {\n  for (const arg of args)\n    if (arg != null)\n      return arg\n}\n","export const doctype = (html: string) =>\n  '<!doctype html>' + html\n\nexport const minify = (html: string) =>\n  html.replace(/\\s*(^|$|[<>])\\s*/g, '$1')\n\nexport const encode = (arg: string) =>\n  arg.replace(/[<>&\"]/g, c => `&#${c.charCodeAt(0)};`)\n"],"names":["abs","acos","acosh","asin","asinh","atan","atan2","atanh","cbrt","ceil","clz32","cos","cosh","exp","expm1","floor","fround","hypot","imul","log","log10","log1p","log2","max","min","pow","random","round","sign","sin","sinh","sqrt","tan","tanh","trunc","E","LN10","LN2","LOG10E","LOG2E","PI","SQRT1_2","SQRT2","Math","isFinite","isInteger","isNaN","isSafeInteger","parseFloat","parseInt","EPSILON","MAX_SAFE_INTEGER","MAX_VALUE","MIN_SAFE_INTEGER","MIN_VALUE","NEGATIVE_INFINITY","POSITIVE_INFINITY","Number","fit","fn","width","height","widthʹ","heightʹ","contain","cover","TAU","ε","τ","add","a","b","mul","clamp","t","lerp","norm","aʹ","bʹ","aʺ","bʺ","Kp","Ki","Kd","M","Infinity","tʹ","eʹ","Σe","PV","SP","e","Δt","Δe","items","length","at","x","y","order","z","i","size","area","lut","Float32Array","enc","row","String","fromCharCode","Array","from","map","it","value","reduce","acc","accʹ","decodeByte","n","encodeByte","R","G","B","lum","r","g","rgb","Uint8Array","canvas","join","bytes","str","c","charCodeAt","imageData","data","xy00","xy10","xy01","xy11","xy02","xy12","xy03","xy13","b0","b1","b2","b3","byte","charCodes","rgbʹ","rʹ","gʹ","srgb","hʹ","sʹ","lʹ","hʺ","sʺ","lʺ","l","cosx","sinx","xyz","h","s","randomʹ","i.lum","i.r","i.g","i.b","toString","slice","rgbʺ","i.rgb","f.r","f.g","f.b","extend","Object","assign","overwrite","get","object","path","sep","split","o","next","props","Set","prototype","getPrototypeOf","getOwnPropertyNames","forEach","prop","element","name","options","document","createElement","parent","children","child","appendChild","event","preventDefault","Promise","resolve","requestAnimationFrame","getContext","sum","addʹ","product","mulʹ","step","number","re","input","match","exec","predicate","arg","predicates","p","generic","polynomial","previous","hash","j","crc32","crc32c","seed","lcg","N","seed0","seed1","seed2","seed3","w","state","Uint32Array","index","d","mat1","mat2","tmat","m","mapArgs","tag","strings","args","mapStrings","mapResult","raw","fnArg","fnStr","fnRes","identity","first","rest","escape","RegExp","source","replace","flags","parts","and","or","fromCodePoint","idx","chr","codePointAt","idx_az","text","idx_09","format","tmpl","_","brackets","hashBrackets","dollarBrackets","doubleBrackets","ESCAPE","QUOTE","SPACE","head","tail","fns","obj","vec","last","tmp","normalize","quote","char","isEscape","test","isQuote","isSpace","SyntaxError","arr","html"],"mappings":"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"}