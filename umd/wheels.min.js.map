{"version":3,"file":"wheels.min.js","sources":["../src/math/easing.ts","../src/math/native.ts","../src/math/fit.ts","../src/math/extensions.ts","../src/math/pid.ts","../src/array/index.ts","../src/bayer/index.ts","../src/braille/util.ts","../src/braille/canvas.ts","../src/braille/encoding.ts","../src/color/rgb/constants.ts","../src/color/rgb/i.ts","../src/braille/render-image-data.ts","../src/color/rgb/f.ts","../src/color/srgb.ts","../src/color/cubehelix.ts","../src/color/hsl.ts","../src/color/rgb/index.ts","../src/color/rgb/operations.ts","../src/color/sinebow.ts","../src/object/index.ts","../src/dom/index.ts","../src/hash/crc32.ts","../src/hash/joaat.ts","../src/prng/alea.ts","../src/prng/lcg.ts","../src/prng/mt.ts","../src/prng/lfsr.ts","../src/prng/tmt.ts","../src/prng/well.ts","../src/prng/xs.ts","../src/tag/index.ts","../src/re/index.ts","../src/text/styles/util.ts","../src/text/styles/fractur.ts","../src/text/styles/script.ts","../src/text/styles/serif.ts","../src/text/styles/sans-serif.ts","../src/text/styles/index.ts","../src/text/format.ts","../src/text/split.ts","../src/text/template.ts","../src/text/levenshtein.ts","../src/text/sanitize.ts","../src/util/index.ts","../src/html/index.ts"],"sourcesContent":["export type IEasing = (t: number) => number\n\nexport const\n  smoothstep:   IEasing = t => t*t*(3 - 2*t),\n  smootherstep: IEasing = t => t*t*t*(t*(t*6 - 15) + 10)\n\nexport const\n  linear:       IEasing = t => t,\n  in2:          IEasing = t => t*t,\n  in3:          IEasing = t => t*t*t,\n  in4:          IEasing = t => t*t*t*t,\n  in5:          IEasing = t => t*t*t*t*t,\n  out2:         IEasing = t => t*(2-t),\n  out3:         IEasing = t => (--t)*t*t+1,\n  out4:         IEasing = t => 1-(--t)*t*t*t,\n  out5:         IEasing = t => 1+(--t)*t*t*t*t,\n  inOut2:       IEasing = t => t<.5 ? 2*t*t : -1+(4-2*t)*t,\n  inOut3:       IEasing = t => t<.5 ? 4*t*t*t : (t-1)*(2*t-2)*(2*t-2)+1,\n  inOut4:       IEasing = t => t<.5 ? 8*t*t*t*t : 1-8*(--t)*t*t*t,\n  inOut5:       IEasing = t => t<.5 ? 16*t*t*t*t*t : 1+16*(--t)*t*t*t*t\n","export const {\n  abs, acos, acosh, asin, asinh, atan, atan2, atanh, cbrt, ceil, clz32,\n  cos, cosh, exp, expm1, floor, fround, hypot, imul, log, log10, log1p,\n  log2, max, min, pow, random, round, sign, sin, sinh, sqrt, tan, tanh,\n  trunc, E, LN10, LN2, LOG10E, LOG2E, PI, SQRT1_2, SQRT2\n} = Math\n\nexport const {\n  isFinite,\n  isInteger,\n  isNaN,\n  isSafeInteger,\n  parseFloat,\n  parseInt,\n  EPSILON,\n  MAX_SAFE_INTEGER,\n  MAX_VALUE,\n  MIN_SAFE_INTEGER,\n  MIN_VALUE,\n  NEGATIVE_INFINITY,\n  POSITIVE_INFINITY\n} = Number\n","import { min, max } from './native'\n\nconst fit = (fn: typeof min | typeof max) =>\n  (width: number, height: number) =>\n    (widthʹ: number, heightʹ: number) =>\n      fn(width/widthʹ, height/heightʹ)\n\nexport const contain = fit(min)\nexport const cover   = fit(max)\n","import { EPSILON, PI, E, min, max } from './native'\n\nexport type n = number\n\nexport const\n  TAU = 2 * PI,\n  PHI = 5 ** .5 * .5 + .5\n\nexport const\n  e = E,\n  ε = EPSILON,\n  π = PI,\n  τ = TAU,\n  ϕ = PHI\n\nexport const\n  add = (a: n, b: n) => a + b,\n  sub = (a: n, b: n) => a - b,\n  mul = (a: n, b: n) => a * b,\n  div = (a: n, b: n) => a / b\n\nexport const\n  clamp = (a: n, b: n, t: n) => min(max(a, t), b),\n  lerp  = (a: n, b: n, t: n) => a + t * (b - a),\n  norm  = (a: n, b: n, t: n) => (t - a) / (b - a),\n  map   = (aʹ: n, bʹ: n, aʺ: n, bʺ: n, t: n) => lerp(aʺ, bʺ, norm(aʹ, bʹ, t))\n","import { ε, clamp } from './extended'\n\nexport const pid = (Kp: number, Ki: number, Kd: number, M = Infinity) => {\n  let tʹ: number\n  let eʹ: number\n  let Σe = 0\n\n  return (PV: number, SP: number, t: number) => {\n    const e = SP - PV\n    const Δt = t - tʹ || ε\n    const Δe = e - eʹ || 0\n\n    tʹ = t\n    eʹ = e\n    Σe = clamp(-M, M, Σe + e*Δt)\n\n    return Kp*e + Ki*Σe + Kd*Δe/Δt\n  }\n}\n","import { Mutable } from '../types'\nimport { random } from '../math'\n\nexport const pick = <T>(items: ArrayLike<T>) =>\n  items[items.length * random() | 0]\n\nexport const shuffle = <T>(items: Mutable<ArrayLike<T>>): ArrayLike<T> => {\n  for (let i = items.length; i > 0;) {\n    const j = Math.floor(Math.random() * i--);\n    [items[i], items[j]] = [items[j], items[i]]\n  }\n  return items\n}\n","export const at = (x: number, y: number, order: number) => {\n  let z = 0\n  for (let i = order; i--; x >>= 1, y >>= 1)\n    z = (x&1 ^ y&1 | z<<1)<<1 | y&1\n  return z + .5\n}\n\nexport const lut = (order: number) => {\n  const size = 1<<order, area = size*size\n  const lut = new Float32Array(area)\n  for (let y = 0; y < size; y++)\n    for (let x = 0; x < size; x++)\n      lut[x + y*size] = at(x, y, order) / area\n  return (x: number, y: number) => lut[x%size + y%size*size]\n}\n","export const reverseByte = (b: number) =>\n  (b&0x01)<<7 | (b&0x02)<<5 | (b&0x04)<<3 | (b&0x08)<<1 |\n  (b&0x10)>>1 | (b&0x20)>>3 | (b&0x40)>>5 | (b&0x80)>>7\n\nexport const encodeByte = (b: number) =>\n  (b&0x08)<<3 | (b&0x70)>>1 | (b&0x87) | 0x2800\n\nexport const decodeByte = (b: number) =>\n  (b&0x40)>>3 | (b&0x38)<<1 | (b&0x87)\n","import { encodeByte } from './util'\n\nconst encodeLine = (line: Iterable<number>) => Array.from(line, encodeByte)\nconst renderLine = (line: Iterable<number>) => String.fromCharCode(...encodeLine(line))\nconst dot = (x: number, y: number) => 1 << ((y&3) | (x&1)<<2)\n\nexport type ICanvas = Uint8Array[]\nexport type ICanvasRender = (canvas: ICanvas) => string\nexport type ICanvasCreate = (width: number, height: number) => ICanvas\nexport type ICanvasEdit = (canvas: ICanvas, x: number, y: number) => number\nexport type ICanvasFill = (canvas: ICanvas, fn: (x: number, y: number) => number) => void\n\nexport const render: ICanvasRender = canvas =>\n  canvas.map(renderLine).join('\\n')\n\nexport const create: ICanvasCreate = (width, height) =>\n  Array.from(Array(height>>2), () => new Uint8Array(width>>1))\n\nexport const toggle: ICanvasEdit = (canvas, x, y) =>\n  canvas[y>>2][x>>1] ^= dot(x, y)\n\nexport const on: ICanvasEdit = (canvas, x, y) =>\n  canvas[y>>2][x>>1] |= dot(x, y)\n\nexport const off: ICanvasEdit = (canvas, x, y) =>\n  canvas[y>>2][x>>1] &= ~dot(x, y)\n\nexport const fill: ICanvasFill = (canvas, fn) => {\n  const w = canvas[0].length << 1\n  const h = canvas.length << 2\n  for (let y = 0; y < h; y += 4)\n    for (let x = 0; x < w; x += 2)\n      canvas[y>>2][x>>1] =\n        fn(x+0, y+0)<<0 | fn(x+1, y+0)<<4 |\n        fn(x+0, y+1)<<1 | fn(x+1, y+1)<<5 |\n        fn(x+0, y+2)<<2 | fn(x+1, y+2)<<6 |\n        fn(x+0, y+3)<<3 | fn(x+1, y+3)<<7\n}\n","import { reverseByte, encodeByte, decodeByte } from './util'\n\nexport const encode = (input: Iterable<number>) =>\n  String.fromCharCode(...Array.from(input, b => encodeByte(reverseByte(b))))\n\nexport const decode = (input: string) =>\n  Array.from(input, c => reverseByte(decodeByte(c.charCodeAt(0))))\n","export const R = .212655\nexport const G = .715158\nexport const B = .072187\n","import { R, G, B } from './constants'\n\nexport const lum = (r: number, g: number, b: number) =>\n  (R*r + G*g + B*b) / 0xff\n\nexport const rgb = (r: number, g: number, b: number) =>\n  (0xff & r)<<16 | (0xff & g)<<8 | (0xff & b)\n\nexport const r = (rgb: number) => 0xff & rgb>>16\nexport const g = (rgb: number) => 0xff & rgb>>8\nexport const b = (rgb: number) => 0xff & rgb\n","import { lum } from '../color/rgb/i'\n\nconst enum CharCode {\n  newline = 0xa,\n  braille = 0x2800\n}\n\nconst charCodes = function* ({ width, height, data }: ImageData) {\n  const\n    xy00 = 0x0*width, xy10 = 0x4+xy00,\n    xy01 = 0x4*width, xy11 = 0x4+xy01,\n    xy02 = 0x8*width, xy12 = 0x4+xy02,\n    xy03 = 0xc*width, xy13 = 0x4+xy03\n\n  for (let y = 0; y < height; y += 4) {\n    for (let x = 0; x < width; x += 2) {\n      const\n        r = x + y*width << 2,\n        g = r | 1,\n        b = r | 2\n\n      const\n        b0 = lum(data[r+xy00], data[g+xy00], data[b+xy00]), // ⣾\n        b1 = lum(data[r+xy01], data[g+xy01], data[b+xy01]), // ⣽\n        b2 = lum(data[r+xy02], data[g+xy02], data[b+xy02]), // ⣻\n        b3 = lum(data[r+xy03], data[g+xy03], data[b+xy03]), // ⢿\n        b4 = lum(data[r+xy10], data[g+xy10], data[b+xy10]), // ⣷\n        b5 = lum(data[r+xy11], data[g+xy11], data[b+xy11]), // ⣯\n        b6 = lum(data[r+xy12], data[g+xy12], data[b+xy12]), // ⣟\n        b7 = lum(data[r+xy13], data[g+xy13], data[b+xy13])  // ⡿\n\n      const byte =\n        .5+b0 << 0 | .5+b4 << 3 | // ●₀ ●₃\n        .5+b1 << 1 | .5+b5 << 4 | // ●₁ ●₄\n        .5+b2 << 2 | .5+b6 << 5 | // ●₂ ●₅\n        .5+b3 << 6 | .5+b7 << 7   // ○₆ ○₇\n\n      yield CharCode.braille | byte\n    }\n    yield CharCode.newline\n  }\n}\n\nexport const renderImageData = (imageData: ImageData) =>\n  String.fromCharCode(...charCodes(imageData))\n","import { r as rʹ, g as gʹ, b as bʹ, rgb as rgbʹ } from './i'\nimport { R, G, B } from './constants'\n\nexport const lum = (r: number, g: number, b: number) =>\n  R*r + G*g + B*b\n\nexport const rgb = (r: number, g: number, b: number) =>\n  rgbʹ(.5 + 0xff*r, .5 + 0xff*g, .5 + 0xff*b)\n\nexport const r = (rgb: number) => rʹ(rgb) / 0xff\nexport const g = (rgb: number) => gʹ(rgb) / 0xff\nexport const b = (rgb: number) => bʹ(rgb) / 0xff\n","export const rgb = (srgb: number) =>\n  srgb<=0.04045 ? srgb/12.92 : ((srgb+0.055)/1.055)**2.4\n\nexport const srgb = (rgb: number) =>\n  rgb<=0.0031308 ? rgb*12.92 : (rgb**(1/2.4))*1.055 - 0.055\n","import { τ, cos, sin, clamp } from '../math'\nimport { rgb } from './rgb/f'\n\nconst xyz = (x: number, y: number, z: number) => {\n  const cosx = cos(x), sinx = sin(x)\n  const r = clamp(0, 1, z + y*(-0.14861*cosx + +1.78277*sinx))\n  const g = clamp(0, 1, z + y*(-0.29227*cosx + -0.90649*sinx))\n  const b = clamp(0, 1, z + y*(+1.97294*cosx))\n  return rgb(r, g, b)\n}\n\nexport const cubehelix = (\n  hʹ = -1/6, sʹ = 1, lʹ = 0,\n  hʺ = -5/3, sʺ = 1, lʺ = 1\n) => (t: number) => {\n  const h = hʹ + t*(hʺ - hʹ)\n  const s = sʹ + t*(sʺ - sʹ)\n  const l = lʹ + t*(lʺ - lʹ)\n  return xyz(τ*(h+1/3), .5*s*l*(1-l), l)\n}\n\n// export const classic = (start = .5, rots = -1.5, hue = 1) =>\n//   (t: number) => xyz(τ*(start/3+rots*t), .5*hue*t*(1-t), t)\n\n// export default (t: number) =>\n//   xyz(π*(1/3-3*t), .5*t*(1-t), t)\n","import { abs, clamp } from '../math'\nimport { rgb } from './rgb/f'\n\nexport const hsl = (h: number, s: number, l: number) => {\n  const hʹ = h%1, sʹ = s*(.5-abs(.5-l))\n  const r = l + sʹ*clamp(-1, 1, 12*abs((3/3-hʹ)%1-.5)-3)\n  const g = l + sʹ*clamp(-1, 1, 12*abs((4/3-hʹ)%1-.5)-3)\n  const b = l + sʹ*clamp(-1, 1, 12*abs((5/3-hʹ)%1-.5)-3)\n  return rgb(r, g, b)\n}\n","import { floor, random as randomʹ } from '../../math'\nimport * as i from './i'\nimport * as f from './f'\n\nexport const random = () =>\n  floor(randomʹ() * 0x1000000)\n\nexport const lum = (rgb: number) =>\n  i.lum(i.r(rgb), i.g(rgb), i.b(rgb))\n\nexport const hex = (rgb: number) =>\n  '#' + ('00000' + floor(rgb).toString(16)).slice(-6)\n\nexport { i, f }\nexport * from './constants'\nexport * from './operations'\n","import { min, max, lerp } from '../../math'\nimport * as i from './i'\nimport * as f from './f'\n\nexport const add = (rgbʹ: number, rgbʺ: number) => i.rgb(\n  min(i.r(rgbʹ) + i.r(rgbʺ), 0xff),\n  min(i.g(rgbʹ) + i.g(rgbʺ), 0xff),\n  min(i.b(rgbʹ) + i.b(rgbʺ), 0xff)\n)\n\nexport const sub = (rgbʹ: number, rgbʺ: number) => i.rgb(\n  max(i.r(rgbʹ) - i.r(rgbʺ), 0),\n  max(i.g(rgbʹ) - i.g(rgbʺ), 0),\n  max(i.b(rgbʹ) - i.b(rgbʺ), 0)\n)\n\nexport const mul = (rgbʹ: number, rgbʺ: number) => i.rgb(\n  f.r(rgbʹ) * i.r(rgbʺ) + .5,\n  f.g(rgbʹ) * i.g(rgbʺ) + .5,\n  f.b(rgbʹ) * i.b(rgbʺ) + .5\n)\n\nexport const mix = (rgbʹ: number, rgbʺ: number) => (t: number) => i.rgb(\n  lerp(i.r(rgbʹ), i.r(rgbʺ), t),\n  lerp(i.g(rgbʹ), i.g(rgbʺ), t),\n  lerp(i.b(rgbʹ), i.b(rgbʺ), t)\n)\n","import { τ, cos, abs } from '../math'\nimport { rgb } from './rgb/f'\n\nexport const sinebow = (h: number, s: number, l: number) => {\n  const sʹ = s*(.5-abs(.5-l))\n  const r = l + sʹ*cos(τ*(0/3-h))\n  const g = l + sʹ*cos(τ*(1/3-h))\n  const b = l + sʹ*cos(τ*(2/3-h))\n  return rgb(r, g, b)\n}\n","export const extend: typeof Object.assign = Object.assign\n\nexport const overwrite: <T>(target: T, ...sources: Partial<T>[]) => T = extend\n\nexport const copy = <T>(object: T) => overwrite({} as T, object)\n\nexport const get = (object: any, path: string, sep = '.') =>\n  path.split(sep).reduce((o, next) => o && o[next], object)\n\nexport const proto = <T>(object: T) => {\n  const props = new Set<keyof T | 'constructor'>()\n  for (let o = object; o && o !== Object.prototype; o = Object.getPrototypeOf(o))\n    Object.getOwnPropertyNames(o).forEach(prop => props.add(prop as any))\n  return props\n}\n","import { overwrite } from '../object'\n\nexport type IElement = <N extends keyof HTMLElementTagNameMap>(name: N) =>\n  (options?: Partial<HTMLElementTagNameMap[N]>) => HTMLElementTagNameMap[N]\n\nexport const element: IElement = name => options =>\n  overwrite(document.createElement(name), options!)\n\nexport const append = (parent: Element) => (...children: Element[]) =>\n  children.forEach(child => parent.appendChild(child))\n\nexport const prevent = <E extends Event>(fn?: (event: E) => any) =>\n  (event: E) => { event.preventDefault(); fn && fn(event) }\n\nexport const frame = () =>\n  new Promise(resolve => requestAnimationFrame(resolve))\n\nexport const context2d = (options?: Partial<HTMLCanvasElement>) =>\n  element('canvas')(options).getContext('2d')!\n","export const generic = (polynomial: number) => (bytes: ArrayLike<number>, previous = 0) => {\n  let hash = ~previous\n  for (let j, i = 0; i < bytes.length; i++)\n    for (hash ^= bytes[i], j = 8; j--;)\n      hash = hash>>>1 ^ (hash&1 && polynomial)\n  return ~hash >>> 0\n}\n\nexport const crc32  = generic(0xEDB88320)\nexport const crc32c = generic(0x82F63B78)\n","export const joaat = (bytes: ArrayLike<number>) => {\n  let hash = 0\n  for (let i = 0; i < bytes.length; i++) {\n    hash += bytes[i]\n    hash += hash << 10\n    hash ^= hash >>> 6\n  }\n  hash += hash << 3\n  hash ^= hash >>> 11\n  hash += hash << 15\n  return hash >>> 0\n}\n","export const alea = (seed0 = 1, seed1 = 1, seed2 = 1, seed3 = 1) => {\n  let x = (seed0 >>> 0) / 0x100000000\n  let y = (seed1 >>> 0) / 0x100000000\n  let z = (seed2 >>> 0) / 0x100000000\n  let w = (seed3 >>> 0)\n\n  return () => {\n    const t = 2091639*x + w/0x100000000\n    return x = y, y = z, z = t - (w = t|0)\n  }\n}\n","export const generic = (a: number, c: number) => (seed = 1) => {\n  let x = seed\n  return () => x = x*a + c >>> 0\n}\n\nexport const lcg = generic(1664525, 1013904223) // Numerical Recipes\n","import { imul } from '../math'\n\nconst N = 624\nconst M = 397\nconst MATRIX_A   = 0x9908b0df\nconst UPPER_MASK = 0x80000000\nconst LOWER_MASK = 0x7fffffff\n\nexport const mt = (seed = 1) => {\n  const state = new Uint32Array(N)\n  for (let n = state[0] = seed, i = 1; i < N; i++) {\n    n = n ^ n>>>30\n    n = state[i] = i + imul(n, 0x6C078965)\n  }\n\n  let index = N\n  return () => {\n    const a = state[index %= N]\n    const b = state[(index + 1) % N]\n    const c = state[(index + M) % N]\n    const d = a&UPPER_MASK | b&LOWER_MASK\n    let n = state[index++] = c ^ d>>>1 ^ (d&1 && MATRIX_A)\n    n ^= n >>> 11\n    n ^= n <<   7 & 0x9D2C5680\n    n ^= n <<  15 & 0xEFC60000\n    n ^= n >>> 18\n    return n >>> 0\n  }\n}\n","export const lfsr = (seed0 = 0, seed1 = 0, seed2 = 0, seed3 = 0) => {\n  let x = seed0 + 0x02\n  let y = seed1 + 0x08\n  let z = seed2 + 0x10\n  let w = seed3 + 0x80\n\n  return () => {\n    x = (x & 0xFFFFFFFE) << 18 ^ (x ^ x <<  6) >>> 13\n    y = (y & 0xFFFFFFF8) <<  2 ^ (y ^ y <<  2) >>> 27\n    z = (z & 0xFFFFFFF0) <<  7 ^ (z ^ z << 13) >>> 21\n    w = (w & 0xFFFFFF80) << 13 ^ (w ^ w <<  3) >>> 12\n    return (x ^ y ^ z ^ w) >>> 0\n  }\n}\n","import { imul } from '../math'\n\nconst state = (...state: number[]) => {\n  for (let n = state[0], i = 1; i < 8; i++) {\n    n = n ^ n>>>30\n    n = state[i & 3] ^= i + imul(n, 0x6C078965)\n  }\n  return state\n}\n\nexport const tmt = (seed = 1, mat1 = 0x8F7011EE, mat2 = 0xFC78FF1F, tmat = 0x3793FDFF) => {\n  let [ x, y, z, w ] = state(seed, mat1, mat2, tmat)\n\n  return () => {\n    let n = 0x7FFFFFFF&x ^ y ^ z\n    let m = w\n    n ^= n <<  1\n    m ^= m >>> 1 ^ n\n\n    x = y\n    y = z\n    z = n ^ m << 10\n    w = m\n    y ^= -(m & 1) & mat1\n    z ^= -(m & 1) & mat2\n\n    m = x + (z >>> 8)\n    n = w ^ m\n    n ^= -(m & 1) & tmat\n    return n >>> 0\n  }\n}\n","export const well = (seed = 1) => {\n  const state = [ seed ]\n  let a, b, c, d, index = 0\n\n  return () => {\n    a = state[index]\n    c = state[index + 13 & 15]\n    b = a ^ c ^ a<<16 ^ c<<15\n    c = state[index + 9 & 15]\n    c = c ^ c>>>11\n    a = state[index] = b ^ c\n    d = a ^ a<<5 & 0xDA442D24\n    a = state[index = index + 15 & 15]\n    a = a ^ b ^ d ^ a<<2 ^ b<<18 ^ c<<28\n    return state[index] = a>>>0\n  }\n}\n","export const xs1 = (seed = 1) => {\n  let x = seed\n\n  return () => {\n    x ^= x <<  13\n    x ^= x >>> 17\n    x ^= x <<   5\n    return x >>> 0\n  }\n}\n\nexport const xs4 = (seed0 = 1, seed1 = 1, seed2 = 1, seed3 = 1) => {\n  let x = seed0\n  let y = seed1\n  let z = seed2\n  let w = seed3\n  let t\n\n  return () => {\n    t = x ^ x<<11\n    x = y\n    y = z\n    z = w\n    w = w ^ w>>>19 ^ t ^ t>>>8\n    return w >>> 0\n  }\n}\n","export type Tag<A, R, S = ReadonlyArray<string>> = (strings: S, ...args: A[]) => R\nexport type Map<A, R> = (arg: A) => R\n\nexport const mapArgs = <A, Aʹ, R>(fn: Map<Aʹ, A>, tag: Tag<A, R>): Tag<Aʹ, R> =>\n  (strings, ...args) => tag(strings, ...args.map(fn))\n\nexport const mapStrings = <A, R>(fn: Map<string, any>, tag: Tag<A, R>): Tag<A, R> =>\n  (strings, ...args) => tag(strings.map(fn), ...args)\n\nexport const mapResult = <A, R, Rʹ>(fn: Map<R, Rʹ>, tag: Tag<A, R>): Tag<A, Rʹ> =>\n  (strings, ...args) => fn(tag(strings, ...args))\n\nexport const raw = <A, T>(tag: Tag<A, T>): Tag<A, T, TemplateStringsArray> =>\n  (strings, ...args) => tag(strings.raw, ...args)\n\nexport const tag = <R, A>(fnArg: Map<A, any>, fnStr: Map<string, any>, fnRes: Map<string, R>) =>\n  mapResult(fnRes, mapStrings(fnStr, mapArgs(fnArg, identity)))\n\nexport const identity: Tag<any, string> = ([ first, ...rest ], ...args) =>\n  args.reduce((acc, arg, i) => acc + arg + rest[i], first)\n","import { raw, tag } from '../tag'\n\nconst specialChars = /[\\\\^$.*+?()[\\]{}|]/g\n\nexport const escape = (arg: any) =>\n  arg instanceof RegExp\n    ? arg.source\n    : ('' + arg).replace(specialChars, '\\\\$&')\n\nexport const re = (flags = '') =>\n  raw(tag(escape, x => x, re => RegExp(re, flags)))\n\nexport const join = (sep: string) => (flags = '') => (...parts: any[]) =>\n  RegExp(parts.map(escape).join(sep), flags)\n\nexport const and = join('')\nexport const or = join('|')\n","export const str = String.fromCodePoint\n\nexport const idx = (chr: string) => chr.codePointAt(0)!\nexport const idx_az = (chr: string) => 31 & idx(chr)-1\nexport const idx_09 = (chr: string) => 15 & idx(chr)\n\nexport const re_09 = /[0-9]/g\nexport const re_az = /[a-z]/g\nexport const re_AZ = /[A-Z]/g\nexport const re_aZ = /[a-zA-Z]/g\nexport const re_fw = /[!-~]/g\n\nexport const replace = (...steps: [RegExp, (s: string) => string][]) =>\n  (text: string) => steps.reduce((acc, [re, fn]) => acc.replace(re, fn), text)\n","import { replace, str, re_AZ, re_az, idx_az } from './util'\n\nexport const regular = replace(\n  [re_AZ, chr => str(0x1d504 + idx_az(chr))], // 𝔄𝔅𝔆𝔇𝔈𝔉𝔊𝔋𝔌𝔍𝔎𝔏𝔐𝔑𝔒𝔓𝔔𝔕𝔖𝔗𝔘𝔙𝔚𝔛𝔜𝔝\n  [re_az, chr => str(0x1d51e + idx_az(chr))]  // 𝔞𝔟𝔠𝔡𝔢𝔣𝔤𝔥𝔦𝔧𝔨𝔩𝔪𝔫𝔬𝔭𝔮𝔯𝔰𝔱𝔲𝔳𝔴𝔵𝔶𝔷\n)\n\nexport const bold = replace(\n  [re_AZ, chr => str(0x1d56c + idx_az(chr))], // 𝕬𝕭𝕮𝕯𝕰𝕱𝕲𝕳𝕴𝕵𝕶𝕷𝕸𝕹𝕺𝕻𝕼𝕽𝕾𝕿𝖀𝖁𝖂𝖃𝖄𝖅\n  [re_az, chr => str(0x1d586 + idx_az(chr))]  // 𝖆𝖇𝖈𝖉𝖊𝖋𝖌𝖍𝖎𝖏𝖐𝖑𝖒𝖓𝖔𝖕𝖖𝖗𝖘𝖙𝖚𝖛𝖜𝖝𝖞𝖟\n)\n","import { replace, str, re_AZ, re_az, idx_az } from './util'\n\nexport const regular = replace(\n  [re_AZ, chr => str(0x1d49c + idx_az(chr))], // 𝒜𝒝𝒞𝒟𝒠𝒡𝒢𝒣𝒤𝒥𝒦𝒧𝒨𝒩𝒪𝒫𝒬𝒭𝒮𝒯𝒰𝒱𝒲𝒳𝒴𝒵\n  [re_az, chr => str(0x1d4b6 + idx_az(chr))]  // 𝒶𝒷𝒸𝒹𝒺𝒻𝒼𝒽𝒾𝒿𝓀𝓁𝓂𝓃𝓄𝓅𝓆𝓇𝓈𝓉𝓊𝓋𝓌𝓍𝓎𝓏\n)\n\nexport const bold = replace(\n  [re_AZ, chr => str(0x1d4d0 + idx_az(chr))], // 𝓐𝓑𝓒𝓓𝓔𝓕𝓖𝓗𝓘𝓙𝓚𝓛𝓜𝓝𝓞𝓟𝓠𝓡𝓢𝓣𝓤𝓥𝓦𝓧𝓨𝓩\n  [re_az, chr => str(0x1d4ea + idx_az(chr))]  // 𝓪𝓫𝓬𝓭𝓮𝓯𝓰𝓱𝓲𝓳𝓴𝓵𝓶𝓷𝓸𝓹𝓺𝓻𝓼𝓽𝓾𝓿𝔀𝔁𝔂𝔃\n)\n","import { replace, str, re_AZ, re_az, re_09, idx_az, idx_09 } from './util'\n\nexport const bold = replace(\n  [re_AZ, chr => str(0x1d400 + idx_az(chr))], // 𝐀𝐁𝐂𝐃𝐄𝐅𝐆𝐇𝐈𝐉𝐊𝐋𝐌𝐍𝐎𝐏𝐐𝐑𝐒𝐓𝐔𝐕𝐖𝐗𝐘𝐙\n  [re_az, chr => str(0x1d41a + idx_az(chr))], // 𝐚𝐛𝐜𝐝𝐞𝐟𝐠𝐡𝐢𝐣𝐤𝐥𝐦𝐧𝐨𝐩𝐪𝐫𝐬𝐭𝐮𝐯𝐰𝐱𝐲𝐳\n  [re_09, chr => str(0x1d7ce + idx_09(chr))]  // 𝟎𝟏𝟐𝟑𝟒𝟓𝟔𝟕𝟖𝟗\n)\n\nexport const italic = replace(\n  [re_AZ, chr => str(0x1d434 + idx_az(chr))], // 𝐴𝐵𝐶𝐷𝐸𝐹𝐺𝐻𝐼𝐽𝐾𝐿𝑀𝑁𝑂𝑃𝑄𝑅𝑆𝑇𝑈𝑉𝑊𝑋𝑌𝑍\n  [re_az, chr => str(0x1d44e + idx_az(chr))]  // 𝑎𝑏𝑐𝑑𝑒𝑓𝑔𝑕𝑖𝑗𝑘𝑙𝑚𝑛𝑜𝑝𝑞𝑟𝑠𝑡𝑢𝑣𝑤𝑥𝑦𝑧\n)\n\nexport const boldItalic = replace(\n  [re_AZ, chr => str(0x1d468 + idx_az(chr))], // 𝑨𝑩𝑪𝑫𝑬𝑭𝑮𝑯𝑰𝑱𝑲𝑳𝑴𝑵𝑶𝑷𝑸𝑹𝑺𝑻𝑼𝑽𝑾𝑿𝒀𝒁\n  [re_az, chr => str(0x1d482 + idx_az(chr))]  // 𝒂𝒃𝒄𝒅𝒆𝒇𝒈𝒉𝒊𝒋𝒌𝒍𝒎𝒏𝒐𝒑𝒒𝒓𝒔𝒕𝒖𝒗𝒘𝒙𝒚𝒛\n)\n","import { replace, str, re_AZ, re_az, re_09, idx_az, idx_09 } from './util'\n\nexport const regular = replace(\n  [re_AZ, chr => str(0x1d5a0 + idx_az(chr))], // 𝖠𝖡𝖢𝖣𝖤𝖥𝖦𝖧𝖨𝖩𝖪𝖫𝖬𝖭𝖮𝖯𝖰𝖱𝖲𝖳𝖴𝖵𝖶𝖷𝖸𝖹\n  [re_az, chr => str(0x1d5ba + idx_az(chr))], // 𝖺𝖻𝖼𝖽𝖾𝖿𝗀𝗁𝗂𝗃𝗄𝗅𝗆𝗇𝗈𝗉𝗊𝗋𝗌𝗍𝗎𝗏𝗐𝗑𝗒𝗓\n  [re_09, chr => str(0x1d7e2 + idx_09(chr))]  // 𝟢𝟣𝟤𝟥𝟦𝟧𝟨𝟩𝟪𝟫\n)\n\nexport const bold = replace(\n  [re_AZ, chr => str(0x1d5d4 + idx_az(chr))], // 𝗔𝗕𝗖𝗗𝗘𝗙𝗚𝗛𝗜𝗝𝗞𝗟𝗠𝗡𝗢𝗣𝗤𝗥𝗦𝗧𝗨𝗩𝗪𝗫𝗬𝗭\n  [re_az, chr => str(0x1d5ee + idx_az(chr))], // 𝗮𝗯𝗰𝗱𝗲𝗳𝗴𝗵𝗶𝗷𝗸𝗹𝗺𝗻𝗼𝗽𝗾𝗿𝘀𝘁𝘂𝘃𝘄𝘅𝘆𝘇\n  [re_09, chr => str(0x1d7ec + idx_09(chr))]  // 𝟬𝟭𝟮𝟯𝟰𝟱𝟲𝟳𝟴𝟵\n)\n\nexport const italic = replace(\n  [re_AZ, chr => str(0x1d608 + idx_az(chr))], // 𝘈𝘉𝘊𝘋𝘌𝘍𝘎𝘏𝘐𝘑𝘒𝘓𝘔𝘕𝘖𝘗𝘘𝘙𝘚𝘛𝘜𝘝𝘞𝘟𝘠𝘡\n  [re_az, chr => str(0x1d622 + idx_az(chr))]  // 𝘢𝘣𝘤𝘥𝘦𝘧𝘨𝘩𝘪𝘫𝘬𝘭𝘮𝘯𝘰𝘱𝘲𝘳𝘴𝘵𝘶𝘷𝘸𝘹𝘺𝘻\n)\n\nexport const boldItalic = replace(\n  [re_AZ, chr => str(0x1d63c + idx_az(chr))], // 𝘼𝘽𝘾𝘿𝙀𝙁𝙂𝙃𝙄𝙅𝙆𝙇𝙈𝙉𝙊𝙋𝙌𝙍𝙎𝙏𝙐𝙑𝙒𝙓𝙔𝙕\n  [re_az, chr => str(0x1d656 + idx_az(chr))]  // 𝙖𝙗𝙘𝙙𝙚𝙛𝙜𝙝𝙞𝙟𝙠𝙡𝙢𝙣𝙤𝙥𝙦𝙧𝙨𝙩𝙪𝙫𝙬𝙭𝙮𝙯\n)\n","import { replace, str, re_AZ, re_az, re_aZ, re_fw, re_09, idx, idx_az, idx_09 } from './util'\nimport * as fractur from './fractur'\nimport * as script from './script'\nimport * as serif from './serif'\nimport * as sansSerif from './sans-serif'\n\nexport const fullwidth = replace(\n  [re_fw, chr => str(0xfee0 + idx(chr))]\n)\n\nexport const regional = replace(\n  [re_aZ, chr => str(0x1f1e6 + idx_az(chr))]\n)\n\nexport const monospace = replace(\n  [re_AZ, chr => str(0x1d670 + idx_az(chr))], // 𝙰𝙱𝙲𝙳𝙴𝙵𝙶𝙷𝙸𝙹𝙺𝙻𝙼𝙽𝙾𝙿𝚀𝚁𝚂𝚃𝚄𝚅𝚆𝚇𝚈𝚉\n  [re_az, chr => str(0x1d68a + idx_az(chr))], // 𝚊𝚋𝚌𝚍𝚎𝚏𝚐𝚑𝚒𝚓𝚔𝚕𝚖𝚗𝚘𝚙𝚚𝚛𝚜𝚝𝚞𝚟𝚠𝚡𝚢𝚣\n  [re_09, chr => str(0x1d7f6 + idx_09(chr))]  // 𝟶𝟷𝟸𝟹𝟺𝟻𝟼𝟽𝟾𝟿\n)\n\nexport const doubleStruck = replace(\n  [re_AZ, chr => str(0x1d538 + idx_az(chr))], // 𝔸𝔹𝔺𝔻𝔼𝔽𝔾𝔿𝕀𝕁𝕂𝕃𝕄𝕅𝕆𝕇𝕈𝕉𝕊𝕋𝕌𝕍𝕎𝕏𝕐𝕑\n  [re_az, chr => str(0x1d552 + idx_az(chr))], // 𝕒𝕓𝕔𝕕𝕖𝕗𝕘𝕙𝕚𝕛𝕜𝕝𝕞𝕟𝕠𝕡𝕢𝕣𝕤𝕥𝕦𝕧𝕨𝕩𝕪𝕫\n  [re_09, chr => str(0x1d7d8 + idx_09(chr))]  // 𝟘𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡\n)\n\nexport { fractur, script, serif, sansSerif }\n","import { get } from '../object'\n\nexport type IFormat = (...args: any[]) => string\nexport type IFormatTag = <T>([head, ...tail]: ReadonlyArray<string>, ...fns: ((obj: T) => any)[]) => (obj: T) => string\n\nexport const tag: IFormatTag = ([ head, ...tail ], ...fns) =>\n  obj => fns.reduce((acc, fn, i) => acc + fn(obj) + tail[i], head)\n\nexport const format = (re: RegExp) => (tmpl: string): IFormat =>\n  (...args) => tmpl.replace(re, (_, path) => get(args, path))\n\nexport const brackets = format(/{(.*?)}/g)\n\nexport const hashBrackets = format(/#{(.*?)}/g)\n\nexport const dollarBrackets = format(/\\${(.*?)}/g)\n\nexport const doubleBrackets = format(/{{(.*?)}}/g)\n","// tslint:disable:curly\nconst ESCAPE = /\\\\/\nconst QUOTE = /'|\"/\nconst SPACE = /\\s/\n\nexport const split = function* (input: string) {\n  let escape = false\n  let quote = null\n  let arg = null\n\n  for (const char of input) {\n    const isEscape = ESCAPE.test(char)\n    const isQuote = QUOTE.test(char)\n    const isSpace = SPACE.test(char)\n\n    if (!isSpace && arg == null)\n      arg = ''\n\n    if (escape) {\n      arg += char\n      escape = false\n    }\n    else if (isEscape) {\n      escape = true\n    }\n    else if (isQuote && !quote) {\n      quote = char\n    }\n    else if (isQuote && quote === char) {\n      quote = null\n    }\n    else if (isSpace && !quote && arg != null) {\n      yield arg\n      arg = null\n    }\n    else if (arg != null) {\n      arg += char\n    }\n  }\n\n  if (escape || quote)\n    throw new SyntaxError\n\n  if (arg != null)\n    yield arg\n}\n","export const renderer = (tmpl: string, arg = '$') =>\n  new Function(arg, 'return `' + tmpl + '`')\n\nexport const render = (tmpl: string, obj: object, arg = '$') =>\n  new Function(arg, '{' + Object.keys(obj) + '}', 'return `' + tmpl + '`')(obj, obj)\n","import { min } from '../math'\n\nexport const levenshtein = (a: string, b: string) => {\n  const vec = new Uint32Array(a.length + 1)\n\n  for (let y = 1; y <= a.length; y++)\n    vec[y] = y\n\n  for (let x = 1; x <= b.length; x++) {\n    vec[0] = x\n    for (let last = x-1, y = 1; y <= a.length; y++) {\n      const tmp = vec[y]\n      vec[y] = min(vec[y]+1, vec[y-1]+1, last + +(a[y-1] !== b[x-1]))\n      last = tmp\n    }\n  }\n\n  return vec[a.length]\n}\n","const spaces = /(?:\\n|\\t|\\p{Z})/ug\nconst unsafe = /(?!\\n)(?:\\p{Cc}|\\p{Cf}|\\p{Cn}|\\p{Co}|\\p{Mn})/ug\n\nexport const sanitize = (text: string) => text\n  .normalize('NFKC')\n  .replace(spaces, ' ')\n  .replace(unsafe, '')\n","export const tuple = <T extends [void] | {}>(arr: T) => arr\n\nexport const firstNonNull = <T>(...args: (T | null | undefined)[]) => {\n  for (const arg of args)\n    if (arg != null)\n      return arg\n}\n","export const doctype = (html: string) =>\n  '<!doctype html>' + html\n\nexport const minify = (html: string) =>\n  html.replace(/\\s*(^|$|[<>])\\s*/g, '$1')\n\nexport const encode = (arg: string) =>\n  arg.replace(/[<>&\"]/g, c => `&#${c.charCodeAt(0)};`)\n"],"names":["abs","acos","acosh","asin","asinh","atan","atan2","atanh","cbrt","ceil","clz32","cos","cosh","exp","expm1","floor","fround","hypot","imul","log","log10","log1p","log2","max","min","pow","random","round","sign","sin","sinh","sqrt","tan","tanh","trunc","E","LN10","LN2","LOG10E","LOG2E","PI","SQRT1_2","SQRT2","Math","isFinite","isInteger","isNaN","isSafeInteger","parseFloat","parseInt","EPSILON","MAX_SAFE_INTEGER","MAX_VALUE","MIN_SAFE_INTEGER","MIN_VALUE","NEGATIVE_INFINITY","POSITIVE_INFINITY","Number","fit","fn","width","height","widthʹ","heightʹ","contain","cover","TAU","ε","τ","clamp","a","b","t","lerp","norm","aʹ","bʹ","aʺ","bʺ","Kp","Ki","Kd","M","Infinity","tʹ","eʹ","Σe","PV","SP","e","Δt","Δe","items","length","i","j","at","x","y","order","z","size","area","lut","Float32Array","reverseByte","encodeByte","renderLine","line","String","fromCharCode","Array","from","encodeLine","dot","input","c","decodeByte","charCodeAt","R","G","B","lum","r","g","rgb","canvas","map","join","Uint8Array","w","h","imageData","data","xy00","xy10","xy01","xy11","xy02","xy12","xy03","xy13","b0","b1","b2","b3","byte","charCodes","rgbʹ","rʹ","gʹ","srgb","hʹ","sʹ","lʹ","hʺ","sʺ","lʺ","l","cosx","sinx","xyz","s","randomʹ","i.lum","i.r","i.g","i.b","toString","slice","rgbʺ","i.rgb","f.r","f.g","f.b","extend","Object","assign","overwrite","get","object","path","sep","split","reduce","o","next","props","Set","prototype","getPrototypeOf","getOwnPropertyNames","forEach","prop","add","element","name","options","document","createElement","parent","children","child","appendChild","event","preventDefault","Promise","resolve","requestAnimationFrame","getContext","generic","polynomial","bytes","previous","hash","crc32","crc32c","seed","lcg","N","seed0","seed1","seed2","seed3","state","Uint32Array","n","index","d","mat1","mat2","tmat","m","mapArgs","tag","strings","args","mapStrings","mapResult","raw","fnArg","fnStr","fnRes","identity","first","rest","acc","arg","escape","RegExp","source","replace","flags","parts","and","or","re","str","fromCodePoint","idx","chr","codePointAt","idx_az","idx_09","re_az","re_AZ","steps","text","format","tmpl","_","brackets","hashBrackets","dollarBrackets","doubleBrackets","ESCAPE","QUOTE","SPACE","head","tail","fns","obj","Function","keys","vec","last","tmp","normalize","quote","char","isEscape","test","isQuote","isSpace","SyntaxError","arr","html"],"mappings":"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"}