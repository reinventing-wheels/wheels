{"version":3,"file":"wheels.min.js","sources":["../src/math/easing.ts","../src/math/native.ts","../src/math/fit.ts","../src/math/extensions.ts","../src/math/pid.ts","../src/array/index.ts","../src/bayer/index.ts","../src/fp/iter.ts","../src/fp/math.ts","../src/fp/logic.ts","../src/braille/encoding.ts","../src/color/rgb/constants.ts","../src/color/rgb/i.ts","../src/braille/canvas.ts","../src/braille/render-image-data.ts","../src/color/rgb/f.ts","../src/color/srgb.ts","../src/color/cubehelix.ts","../src/color/hsl.ts","../src/color/rgb/index.ts","../src/color/rgb/operations.ts","../src/color/sinebow.ts","../src/object/index.ts","../src/dom/index.ts","../src/hash/crc32.ts","../src/hash/joaat.ts","../src/prng/alea.ts","../src/prng/lcg.ts","../src/prng/mt.ts","../src/prng/lfsr.ts","../src/prng/tmt.ts","../src/prng/well.ts","../src/prng/xs.ts","../src/tag/index.ts","../src/re/index.ts","../src/text/styles/util.ts","../src/text/styles/fractur.ts","../src/text/styles/script.ts","../src/text/styles/serif.ts","../src/text/styles/sans-serif.ts","../src/text/styles/index.ts","../src/text/format.ts","../src/text/split.ts","../src/text/template.ts","../src/text/levenshtein.ts","../src/text/sanitize.ts","../src/util/index.ts","../src/html/index.ts"],"sourcesContent":["export type IEasing = (t: number) => number\n\nexport const\n  smoothstep:   IEasing = t => t*t*(3 - 2*t),\n  smootherstep: IEasing = t => t*t*t*(t*(t*6 - 15) + 10)\n\nexport const\n  linear:       IEasing = t => t,\n  in2:          IEasing = t => t*t,\n  in3:          IEasing = t => t*t*t,\n  in4:          IEasing = t => t*t*t*t,\n  in5:          IEasing = t => t*t*t*t*t,\n  out2:         IEasing = t => t*(2-t),\n  out3:         IEasing = t => (--t)*t*t+1,\n  out4:         IEasing = t => 1-(--t)*t*t*t,\n  out5:         IEasing = t => 1+(--t)*t*t*t*t,\n  inOut2:       IEasing = t => t<.5 ? 2*t*t : -1+(4-2*t)*t,\n  inOut3:       IEasing = t => t<.5 ? 4*t*t*t : (t-1)*(2*t-2)*(2*t-2)+1,\n  inOut4:       IEasing = t => t<.5 ? 8*t*t*t*t : 1-8*(--t)*t*t*t,\n  inOut5:       IEasing = t => t<.5 ? 16*t*t*t*t*t : 1+16*(--t)*t*t*t*t\n","export const {\n  abs, acos, acosh, asin, asinh, atan, atan2, atanh, cbrt, ceil, clz32,\n  cos, cosh, exp, expm1, floor, fround, hypot, imul, log, log10, log1p,\n  log2, max, min, pow, random, round, sign, sin, sinh, sqrt, tan, tanh,\n  trunc, E, LN10, LN2, LOG10E, LOG2E, PI, SQRT1_2, SQRT2\n} = Math\n\nexport const {\n  isFinite,\n  isInteger,\n  isNaN,\n  isSafeInteger,\n  parseFloat,\n  parseInt,\n  EPSILON,\n  MAX_SAFE_INTEGER,\n  MAX_VALUE,\n  MIN_SAFE_INTEGER,\n  MIN_VALUE,\n  NEGATIVE_INFINITY,\n  POSITIVE_INFINITY\n} = Number\n","import { min, max } from './native'\n\nconst fit = (fn: typeof min | typeof max) =>\n  (width: number, height: number) =>\n    (widthʹ: number, heightʹ: number) =>\n      fn(width/widthʹ, height/heightʹ)\n\nexport const contain = fit(min)\nexport const cover   = fit(max)\n","import { EPSILON, PI, E, min, max } from './native'\n\nexport type n = number\n\nexport const\n  TAU = 2 * PI,\n  PHI = 5 ** .5 * .5 + .5\n\nexport const\n  e = E,\n  ε = EPSILON,\n  π = PI,\n  τ = TAU,\n  ϕ = PHI\n\nexport const\n  add = (a: n, b: n) => a + b,\n  sub = (a: n, b: n) => a - b,\n  mul = (a: n, b: n) => a * b,\n  div = (a: n, b: n) => a / b\n\nexport const\n  clamp = (a: n, b: n, t: n) => min(max(a, t), b),\n  lerp  = (a: n, b: n, t: n) => a + t * (b - a),\n  norm  = (a: n, b: n, t: n) => (t - a) / (b - a),\n  map   = (aʹ: n, bʹ: n, aʺ: n, bʺ: n, t: n) => lerp(aʺ, bʺ, norm(aʹ, bʹ, t))\n","import { ε, clamp } from './extended'\n\nexport const pid = (Kp: number, Ki: number, Kd: number, M = Infinity) => {\n  let tʹ: number\n  let eʹ: number\n  let Σe = 0\n\n  return (PV: number, SP: number, t: number) => {\n    const e = SP - PV\n    const Δt = t - tʹ || ε\n    const Δe = e - eʹ || 0\n\n    tʹ = t\n    eʹ = e\n    Σe = clamp(-M, M, Σe + e*Δt)\n\n    return Kp*e + Ki*Σe + Kd*Δe/Δt\n  }\n}\n","import { Mutable } from '../types'\nimport { random } from '../math'\n\nexport const pick = <T>(items: ArrayLike<T>) =>\n  items[items.length * random() | 0]\n\nexport const shuffle = <T>(items: Mutable<ArrayLike<T>>): ArrayLike<T> => {\n  for (let i = items.length; i > 0;) {\n    const j = Math.floor(Math.random() * i--);\n    [items[i], items[j]] = [items[j], items[i]]\n  }\n  return items\n}\n","export const at = (x: number, y: number, order: number) => {\n  let z = 0\n  for (let i = order; i--; x >>= 1, y >>= 1)\n    z = (x&1 ^ y&1 | z<<1)<<1 | y&1\n  return z + .5\n}\n\nexport const lut = (order: number) => {\n  const size = 1<<order, area = size*size\n  const lut = new Float32Array(area)\n  for (let y = 0; y < size; y++)\n    for (let x = 0; x < size; x++)\n      lut[x + y*size] = at(x, y, order) / area\n  return (x: number, y: number) => lut[x%size + y%size*size]\n}\n","export const filter = <T>(fn: (arg: T) => boolean) => function* (it: Iterable<T>) {\n  for (const value of it)\n    if (fn(value))\n      yield value\n}\n\nexport const map = <T, U>(fn: (arg: T) => U) => function* (it: Iterable<T>) {\n  for (const value of it)\n    yield fn(value)\n}\n\nexport const reduce = <T, U>(fn: (acc: U, arg: T) => U) => (acc: U) => (it: Iterable<T>) => {\n  let accʹ = acc\n  for (const value of it)\n    accʹ = fn(accʹ, value)\n  return accʹ\n}\n\nexport const range = function* (min: number, max: number, step = 1) {\n  for (let number = min; number < max; number += step)\n    yield number\n}\n\nexport const matcher = (re: RegExp) => function* (input: string) {\n  for (let match; match = re.exec(input);)\n    yield match\n}\n","import { add as addʹ, mul as mulʹ } from '../math'\nimport { reduce } from './iter'\n\nexport const\n  sum     = reduce(addʹ)(0),\n  product = reduce(mulʹ)(0)\n\nexport const\n  add = (b: number) => (a: number) => a + b,\n  sub = (b: number) => (a: number) => a - b,\n  mul = (b: number) => (a: number) => a * b,\n  div = (b: number) => (a: number) => a / b\n","import { reduce } from './iter'\n\nexport type Predicate<A> = (arg: A) => boolean\n\nexport const not = <A>(predicate: Predicate<A>): Predicate<A> =>\n  arg => !predicate(arg)\n\nexport const and = <A>(...predicates: Predicate<A>[]): Predicate<A> =>\n  arg => reduce((acc: boolean, p: Predicate<A>) => acc && p(arg))(true)(predicates)\n\nexport const or = <A>(...predicates: Predicate<A>[]): Predicate<A> =>\n  arg => reduce((acc: boolean, p: Predicate<A>) => acc || p(arg))(false)(predicates)\n","import { map } from '../fp'\n\nexport const reverseByte = (b: number) =>\n  (b&0x01)<<7 | (b&0x02)<<5 | (b&0x04)<<3 | (b&0x08)<<1 |\n  (b&0x10)>>1 | (b&0x20)>>3 | (b&0x40)>>5 | (b&0x80)>>7\n\nexport const encodeByte = (b: number) =>\n  (b&0x08)<<3 | (b&0x70)>>1 | (b&0x87) | 0x2800\n\nexport const decodeByte = (b: number) =>\n  (b&0x40)>>3 | (b&0x38)<<1 | (b&0x87)\n\nexport const encode = (bytes: Iterable<number>) =>\n  String.fromCharCode(...map((b: number) => encodeByte(reverseByte(b)))(bytes))\n\nexport const decode = (str: string) =>\n  Array.from(str, c => reverseByte(decodeByte(c.charCodeAt(0))))\n","export const R = .212655\nexport const G = .715158\nexport const B = .072187\n","import { R, G, B } from './constants'\n\nexport const lum = (r: number, g: number, b: number) =>\n  (R*r + G*g + B*b) / 0xff\n\nexport const rgb = (r: number, g: number, b: number) =>\n  (0xff & r)<<16 | (0xff & g)<<8 | (0xff & b)\n\nexport const r = (rgb: number) => 0xff & rgb>>16\nexport const g = (rgb: number) => 0xff & rgb>>8\nexport const b = (rgb: number) => 0xff & rgb\n","import { encodeByte } from './encoding'\n\nexport type ICanvas = Uint8Array[]\nexport type ICanvasCreate = (width: number, height: number) => ICanvas\nexport type ICanvasMutate = (canvas: ICanvas, x: number, y: number) => number\nexport type ICanvasRender = (canvas: ICanvas) => string\n\nexport const create: ICanvasCreate = (width, height) =>\n  Array.from(Array(height>>2), () => new Uint8Array(width>>1))\n\nexport const toggle: ICanvasMutate = (canvas, x, y) =>\n  canvas[y>>2][x>>1] ^= 1<<((y&3)|(x&1)<<2)\n\nexport const set: ICanvasMutate = (canvas, x, y) =>\n  canvas[y>>2][x>>1] |= 1<<((y&3)|(x&1)<<2)\n\nexport const unset: ICanvasMutate = (canvas, x, y) =>\n  canvas[y>>2][x>>1] &= ~(1<<((y&3)|(x&1)<<2))\n\nexport const render: ICanvasRender = canvas =>\n  canvas.map(line => String.fromCharCode(...Array.from(line, encodeByte))).join('\\n')\n","import { lum } from '../color/rgb/i'\n\nconst enum CharCode {\n  newline = 0xa,\n  braille = 0x2800\n}\n\nconst charCodes = function* ({ width, height, data }: ImageData) {\n  const\n    xy00 = 0x0*width, xy10 = 0x4+xy00,\n    xy01 = 0x4*width, xy11 = 0x4+xy01,\n    xy02 = 0x8*width, xy12 = 0x4+xy02,\n    xy03 = 0xc*width, xy13 = 0x4+xy03\n\n  for (let y = 0; y < height; y += 4) {\n    for (let x = 0; x < width; x += 2) {\n      const\n        r = x + y*width << 2,\n        g = r | 1,\n        b = r | 2\n\n      const\n        b0 = lum(data[r+xy00], data[g+xy00], data[b+xy00]), // ⣾\n        b1 = lum(data[r+xy01], data[g+xy01], data[b+xy01]), // ⣽\n        b2 = lum(data[r+xy02], data[g+xy02], data[b+xy02]), // ⣻\n        b3 = lum(data[r+xy03], data[g+xy03], data[b+xy03]), // ⢿\n        b4 = lum(data[r+xy10], data[g+xy10], data[b+xy10]), // ⣷\n        b5 = lum(data[r+xy11], data[g+xy11], data[b+xy11]), // ⣯\n        b6 = lum(data[r+xy12], data[g+xy12], data[b+xy12]), // ⣟\n        b7 = lum(data[r+xy13], data[g+xy13], data[b+xy13])  // ⡿\n\n      const byte =\n        .5+b0 << 0 | .5+b4 << 3 | // ●₀ ●₃\n        .5+b1 << 1 | .5+b5 << 4 | // ●₁ ●₄\n        .5+b2 << 2 | .5+b6 << 5 | // ●₂ ●₅\n        .5+b3 << 6 | .5+b7 << 7   // ○₆ ○₇\n\n      yield CharCode.braille | byte\n    }\n    yield CharCode.newline\n  }\n}\n\nexport const renderImageData = (imageData: ImageData) =>\n  String.fromCharCode(...charCodes(imageData))\n","import { r as rʹ, g as gʹ, b as bʹ, rgb as rgbʹ } from './i'\nimport { R, G, B } from './constants'\n\nexport const lum = (r: number, g: number, b: number) =>\n  R*r + G*g + B*b\n\nexport const rgb = (r: number, g: number, b: number) =>\n  rgbʹ(.5 + 0xff*r, .5 + 0xff*g, .5 + 0xff*b)\n\nexport const r = (rgb: number) => rʹ(rgb) / 0xff\nexport const g = (rgb: number) => gʹ(rgb) / 0xff\nexport const b = (rgb: number) => bʹ(rgb) / 0xff\n","export const rgb = (srgb: number) =>\n  srgb<=0.04045 ? srgb/12.92 : ((srgb+0.055)/1.055)**2.4\n\nexport const srgb = (rgb: number) =>\n  rgb<=0.0031308 ? rgb*12.92 : (rgb**(1/2.4))*1.055 - 0.055\n","import { τ, cos, sin, clamp } from '../math'\nimport { rgb } from './rgb/f'\n\nconst xyz = (x: number, y: number, z: number) => {\n  const cosx = cos(x), sinx = sin(x)\n  const r = clamp(0, 1, z + y*(-0.14861*cosx + +1.78277*sinx))\n  const g = clamp(0, 1, z + y*(-0.29227*cosx + -0.90649*sinx))\n  const b = clamp(0, 1, z + y*(+1.97294*cosx))\n  return rgb(r, g, b)\n}\n\nexport const cubehelix = (\n  hʹ = -1/6, sʹ = 1, lʹ = 0,\n  hʺ = -5/3, sʺ = 1, lʺ = 1\n) => (t: number) => {\n  const h = hʹ + t*(hʺ - hʹ)\n  const s = sʹ + t*(sʺ - sʹ)\n  const l = lʹ + t*(lʺ - lʹ)\n  return xyz(τ*(h+1/3), .5*s*l*(1-l), l)\n}\n\n// export const classic = (start = .5, rots = -1.5, hue = 1) =>\n//   (t: number) => xyz(τ*(start/3+rots*t), .5*hue*t*(1-t), t)\n\n// export default (t: number) =>\n//   xyz(π*(1/3-3*t), .5*t*(1-t), t)\n","import { abs, clamp } from '../math'\nimport { rgb } from './rgb/f'\n\nexport const hsl = (h: number, s: number, l: number) => {\n  const hʹ = h%1, sʹ = s*(.5-abs(.5-l))\n  const r = l + sʹ*clamp(-1, 1, 12*abs((3/3-hʹ)%1-.5)-3)\n  const g = l + sʹ*clamp(-1, 1, 12*abs((4/3-hʹ)%1-.5)-3)\n  const b = l + sʹ*clamp(-1, 1, 12*abs((5/3-hʹ)%1-.5)-3)\n  return rgb(r, g, b)\n}\n","import { floor, random as randomʹ } from '../../math'\nimport * as i from './i'\nimport * as f from './f'\n\nexport const random = () =>\n  floor(randomʹ() * 0x1000000)\n\nexport const lum = (rgb: number) =>\n  i.lum(i.r(rgb), i.g(rgb), i.b(rgb))\n\nexport const hex = (rgb: number) =>\n  '#' + ('00000' + floor(rgb).toString(16)).slice(-6)\n\nexport { i, f }\nexport * from './constants'\nexport * from './operations'\n","import { min, max, lerp } from '../../math'\nimport * as i from './i'\nimport * as f from './f'\n\nexport const add = (rgbʹ: number, rgbʺ: number) => i.rgb(\n  min(i.r(rgbʹ) + i.r(rgbʺ), 0xff),\n  min(i.g(rgbʹ) + i.g(rgbʺ), 0xff),\n  min(i.b(rgbʹ) + i.b(rgbʺ), 0xff)\n)\n\nexport const sub = (rgbʹ: number, rgbʺ: number) => i.rgb(\n  max(i.r(rgbʹ) - i.r(rgbʺ), 0),\n  max(i.g(rgbʹ) - i.g(rgbʺ), 0),\n  max(i.b(rgbʹ) - i.b(rgbʺ), 0)\n)\n\nexport const mul = (rgbʹ: number, rgbʺ: number) => i.rgb(\n  f.r(rgbʹ) * i.r(rgbʺ) + .5,\n  f.g(rgbʹ) * i.g(rgbʺ) + .5,\n  f.b(rgbʹ) * i.b(rgbʺ) + .5\n)\n\nexport const mix = (rgbʹ: number, rgbʺ: number) => (t: number) => i.rgb(\n  lerp(i.r(rgbʹ), i.r(rgbʺ), t),\n  lerp(i.g(rgbʹ), i.g(rgbʺ), t),\n  lerp(i.b(rgbʹ), i.b(rgbʺ), t)\n)\n","import { τ, cos, abs } from '../math'\nimport { rgb } from './rgb/f'\n\nexport const sinebow = (h: number, s: number, l: number) => {\n  const sʹ = s*(.5-abs(.5-l))\n  const r = l + sʹ*cos(τ*(0/3-h))\n  const g = l + sʹ*cos(τ*(1/3-h))\n  const b = l + sʹ*cos(τ*(2/3-h))\n  return rgb(r, g, b)\n}\n","export const extend: typeof Object.assign = Object.assign\n\nexport const overwrite: <T>(target: T, ...sources: Partial<T>[]) => T = extend\n\nexport const copy = <T>(object: T) => overwrite({} as T, object)\n\nexport const get = (object: any, path: string, sep = '.') =>\n  path.split(sep).reduce((o, next) => o && o[next], object)\n\nexport const proto = <T>(object: T) => {\n  const props = new Set<keyof T | 'constructor'>()\n  for (let o = object; o && o !== Object.prototype; o = Object.getPrototypeOf(o))\n    Object.getOwnPropertyNames(o).forEach(prop => props.add(prop as any))\n  return props\n}\n","import { overwrite } from '../object'\n\nexport type IElement = <N extends keyof HTMLElementTagNameMap>(name: N) =>\n  (options?: Partial<HTMLElementTagNameMap[N]>) => HTMLElementTagNameMap[N]\n\nexport const element: IElement = name => options =>\n  overwrite(document.createElement(name), options!)\n\nexport const append = (parent: Element) => (...children: Element[]) =>\n  children.forEach(child => parent.appendChild(child))\n\nexport const prevent = <E extends Event>(fn?: (event: E) => any) =>\n  (event: E) => { event.preventDefault(); fn && fn(event) }\n\nexport const frame = () =>\n  new Promise(resolve => requestAnimationFrame(resolve))\n\nexport const context2d = (options?: Partial<HTMLCanvasElement>) =>\n  element('canvas')(options).getContext('2d')!\n","export const generic = (polynomial: number) => (bytes: ArrayLike<number>, previous = 0) => {\n  let hash = ~previous\n  for (let j, i = 0; i < bytes.length; i++)\n    for (hash ^= bytes[i], j = 8; j--;)\n      hash = hash>>>1 ^ (hash&1 && polynomial)\n  return ~hash >>> 0\n}\n\nexport const crc32  = generic(0xEDB88320)\nexport const crc32c = generic(0x82F63B78)\n","export const joaat = (bytes: ArrayLike<number>) => {\n  let hash = 0\n  for (let i = 0; i < bytes.length; i++) {\n    hash += bytes[i]\n    hash += hash << 10\n    hash ^= hash >>> 6\n  }\n  hash += hash << 3\n  hash ^= hash >>> 11\n  hash += hash << 15\n  return hash >>> 0\n}\n","export const alea = (seed0 = 1, seed1 = 1, seed2 = 1, seed3 = 1) => {\n  let x = (seed0 >>> 0) / 0x100000000\n  let y = (seed1 >>> 0) / 0x100000000\n  let z = (seed2 >>> 0) / 0x100000000\n  let w = (seed3 >>> 0)\n\n  return () => {\n    const t = 2091639*x + w/0x100000000\n    return x = y, y = z, z = t - (w = t|0)\n  }\n}\n","export const generic = (a: number, c: number) => (seed = 1) => {\n  let x = seed\n  return () => x = x*a + c >>> 0\n}\n\nexport const lcg = generic(1664525, 1013904223) // Numerical Recipes\n","import { imul } from '../math'\n\nconst N = 624\nconst M = 397\nconst MATRIX_A   = 0x9908b0df\nconst UPPER_MASK = 0x80000000\nconst LOWER_MASK = 0x7fffffff\n\nexport const mt = (seed = 1) => {\n  const state = new Uint32Array(N)\n  for (let n = state[0] = seed, i = 1; i < N; i++) {\n    n = n ^ n>>>30\n    n = state[i] = i + imul(n, 0x6C078965)\n  }\n\n  let index = N\n  return () => {\n    const a = state[index %= N]\n    const b = state[(index + 1) % N]\n    const c = state[(index + M) % N]\n    const d = a&UPPER_MASK | b&LOWER_MASK\n    let n = state[index++] = c ^ d>>>1 ^ (d&1 && MATRIX_A)\n    n ^= n >>> 11\n    n ^= n <<   7 & 0x9D2C5680\n    n ^= n <<  15 & 0xEFC60000\n    n ^= n >>> 18\n    return n >>> 0\n  }\n}\n","export const lfsr = (seed0 = 0, seed1 = 0, seed2 = 0, seed3 = 0) => {\n  let x = seed0 + 0x02\n  let y = seed1 + 0x08\n  let z = seed2 + 0x10\n  let w = seed3 + 0x80\n\n  return () => {\n    x = (x & 0xFFFFFFFE) << 18 ^ (x ^ x <<  6) >>> 13\n    y = (y & 0xFFFFFFF8) <<  2 ^ (y ^ y <<  2) >>> 27\n    z = (z & 0xFFFFFFF0) <<  7 ^ (z ^ z << 13) >>> 21\n    w = (w & 0xFFFFFF80) << 13 ^ (w ^ w <<  3) >>> 12\n    return (x ^ y ^ z ^ w) >>> 0\n  }\n}\n","import { imul } from '../math'\n\nconst state = (...state: number[]) => {\n  for (let n = state[0], i = 1; i < 8; i++) {\n    n = n ^ n>>>30\n    n = state[i & 3] ^= i + imul(n, 0x6C078965)\n  }\n  return state\n}\n\nexport const tmt = (seed = 1, mat1 = 0x8F7011EE, mat2 = 0xFC78FF1F, tmat = 0x3793FDFF) => {\n  let [ x, y, z, w ] = state(seed, mat1, mat2, tmat)\n\n  return () => {\n    let n = 0x7FFFFFFF&x ^ y ^ z\n    let m = w\n    n ^= n <<  1\n    m ^= m >>> 1 ^ n\n\n    x = y\n    y = z\n    z = n ^ m << 10\n    w = m\n    y ^= -(m & 1) & mat1\n    z ^= -(m & 1) & mat2\n\n    m = x + (z >>> 8)\n    n = w ^ m\n    n ^= -(m & 1) & tmat\n    return n >>> 0\n  }\n}\n","export const well = (seed = 1) => {\n  const state = [ seed ]\n  let a, b, c, d, index = 0\n\n  return () => {\n    a = state[index]\n    c = state[index + 13 & 15]\n    b = a ^ c ^ a<<16 ^ c<<15\n    c = state[index + 9 & 15]\n    c = c ^ c>>>11\n    a = state[index] = b ^ c\n    d = a ^ a<<5 & 0xDA442D24\n    a = state[index = index + 15 & 15]\n    a = a ^ b ^ d ^ a<<2 ^ b<<18 ^ c<<28\n    return state[index] = a>>>0\n  }\n}\n","export const xs1 = (seed = 1) => {\n  let x = seed\n\n  return () => {\n    x ^= x <<  13\n    x ^= x >>> 17\n    x ^= x <<   5\n    return x >>> 0\n  }\n}\n\nexport const xs4 = (seed0 = 1, seed1 = 1, seed2 = 1, seed3 = 1) => {\n  let x = seed0\n  let y = seed1\n  let z = seed2\n  let w = seed3\n  let t\n\n  return () => {\n    t = x ^ x<<11\n    x = y\n    y = z\n    z = w\n    w = w ^ w>>>19 ^ t ^ t>>>8\n    return w >>> 0\n  }\n}\n","export type Tag<A, R, S = ReadonlyArray<string>> = (strings: S, ...args: A[]) => R\nexport type Map<A, R> = (arg: A) => R\n\nexport const mapArgs = <A, Aʹ, R>(fn: Map<Aʹ, A>, tag: Tag<A, R>): Tag<Aʹ, R> =>\n  (strings, ...args) => tag(strings, ...args.map(fn))\n\nexport const mapStrings = <A, R>(fn: Map<string, any>, tag: Tag<A, R>): Tag<A, R> =>\n  (strings, ...args) => tag(strings.map(fn), ...args)\n\nexport const mapResult = <A, R, Rʹ>(fn: Map<R, Rʹ>, tag: Tag<A, R>): Tag<A, Rʹ> =>\n  (strings, ...args) => fn(tag(strings, ...args))\n\nexport const raw = <A, T>(tag: Tag<A, T>): Tag<A, T, TemplateStringsArray> =>\n  (strings, ...args) => tag(strings.raw, ...args)\n\nexport const tag = <R, A>(fnArg: Map<A, any>, fnStr: Map<string, any>, fnRes: Map<string, R>) =>\n  mapResult(fnRes, mapStrings(fnStr, mapArgs(fnArg, identity)))\n\nexport const identity: Tag<any, string> = ([ first, ...rest ], ...args) =>\n  args.reduce((acc, arg, i) => acc + arg + rest[i], first)\n","import { raw, tag } from '../tag'\n\nconst specialChars = /[\\\\^$.*+?()[\\]{}|]/g\n\nexport const escape = (arg: any) =>\n  arg instanceof RegExp\n    ? arg.source\n    : ('' + arg).replace(specialChars, '\\\\$&')\n\nexport const re = (flags = '') =>\n  raw(tag(escape, x => x, re => RegExp(re, flags)))\n\nexport const join = (sep: string) => (flags = '') => (...parts: any[]) =>\n  RegExp(parts.map(escape).join(sep), flags)\n\nexport const and = join('')\nexport const or = join('|')\n","export const str = String.fromCodePoint\n\nexport const idx = (chr: string) => chr.codePointAt(0)!\nexport const idx_az = (chr: string) => 31 & idx(chr)-1\nexport const idx_09 = (chr: string) => 15 & idx(chr)\n\nexport const re_09 = /[0-9]/g\nexport const re_az = /[a-z]/g\nexport const re_AZ = /[A-Z]/g\nexport const re_aZ = /[a-zA-Z]/g\nexport const re_fw = /[!-~]/g\n\nexport const replace = (...steps: [RegExp, (s: string) => string][]) =>\n  (text: string) => steps.reduce((acc, [re, fn]) => acc.replace(re, fn), text)\n","import { replace, str, re_AZ, re_az, idx_az } from './util'\n\nexport const regular = replace(\n  [re_AZ, chr => str(0x1d504 + idx_az(chr))], // 𝔄𝔅𝔆𝔇𝔈𝔉𝔊𝔋𝔌𝔍𝔎𝔏𝔐𝔑𝔒𝔓𝔔𝔕𝔖𝔗𝔘𝔙𝔚𝔛𝔜𝔝\n  [re_az, chr => str(0x1d51e + idx_az(chr))]  // 𝔞𝔟𝔠𝔡𝔢𝔣𝔤𝔥𝔦𝔧𝔨𝔩𝔪𝔫𝔬𝔭𝔮𝔯𝔰𝔱𝔲𝔳𝔴𝔵𝔶𝔷\n)\n\nexport const bold = replace(\n  [re_AZ, chr => str(0x1d56c + idx_az(chr))], // 𝕬𝕭𝕮𝕯𝕰𝕱𝕲𝕳𝕴𝕵𝕶𝕷𝕸𝕹𝕺𝕻𝕼𝕽𝕾𝕿𝖀𝖁𝖂𝖃𝖄𝖅\n  [re_az, chr => str(0x1d586 + idx_az(chr))]  // 𝖆𝖇𝖈𝖉𝖊𝖋𝖌𝖍𝖎𝖏𝖐𝖑𝖒𝖓𝖔𝖕𝖖𝖗𝖘𝖙𝖚𝖛𝖜𝖝𝖞𝖟\n)\n","import { replace, str, re_AZ, re_az, idx_az } from './util'\n\nexport const regular = replace(\n  [re_AZ, chr => str(0x1d49c + idx_az(chr))], // 𝒜𝒝𝒞𝒟𝒠𝒡𝒢𝒣𝒤𝒥𝒦𝒧𝒨𝒩𝒪𝒫𝒬𝒭𝒮𝒯𝒰𝒱𝒲𝒳𝒴𝒵\n  [re_az, chr => str(0x1d4b6 + idx_az(chr))]  // 𝒶𝒷𝒸𝒹𝒺𝒻𝒼𝒽𝒾𝒿𝓀𝓁𝓂𝓃𝓄𝓅𝓆𝓇𝓈𝓉𝓊𝓋𝓌𝓍𝓎𝓏\n)\n\nexport const bold = replace(\n  [re_AZ, chr => str(0x1d4d0 + idx_az(chr))], // 𝓐𝓑𝓒𝓓𝓔𝓕𝓖𝓗𝓘𝓙𝓚𝓛𝓜𝓝𝓞𝓟𝓠𝓡𝓢𝓣𝓤𝓥𝓦𝓧𝓨𝓩\n  [re_az, chr => str(0x1d4ea + idx_az(chr))]  // 𝓪𝓫𝓬𝓭𝓮𝓯𝓰𝓱𝓲𝓳𝓴𝓵𝓶𝓷𝓸𝓹𝓺𝓻𝓼𝓽𝓾𝓿𝔀𝔁𝔂𝔃\n)\n","import { replace, str, re_AZ, re_az, re_09, idx_az, idx_09 } from './util'\n\nexport const bold = replace(\n  [re_AZ, chr => str(0x1d400 + idx_az(chr))], // 𝐀𝐁𝐂𝐃𝐄𝐅𝐆𝐇𝐈𝐉𝐊𝐋𝐌𝐍𝐎𝐏𝐐𝐑𝐒𝐓𝐔𝐕𝐖𝐗𝐘𝐙\n  [re_az, chr => str(0x1d41a + idx_az(chr))], // 𝐚𝐛𝐜𝐝𝐞𝐟𝐠𝐡𝐢𝐣𝐤𝐥𝐦𝐧𝐨𝐩𝐪𝐫𝐬𝐭𝐮𝐯𝐰𝐱𝐲𝐳\n  [re_09, chr => str(0x1d7ce + idx_09(chr))]  // 𝟎𝟏𝟐𝟑𝟒𝟓𝟔𝟕𝟖𝟗\n)\n\nexport const italic = replace(\n  [re_AZ, chr => str(0x1d434 + idx_az(chr))], // 𝐴𝐵𝐶𝐷𝐸𝐹𝐺𝐻𝐼𝐽𝐾𝐿𝑀𝑁𝑂𝑃𝑄𝑅𝑆𝑇𝑈𝑉𝑊𝑋𝑌𝑍\n  [re_az, chr => str(0x1d44e + idx_az(chr))]  // 𝑎𝑏𝑐𝑑𝑒𝑓𝑔𝑕𝑖𝑗𝑘𝑙𝑚𝑛𝑜𝑝𝑞𝑟𝑠𝑡𝑢𝑣𝑤𝑥𝑦𝑧\n)\n\nexport const boldItalic = replace(\n  [re_AZ, chr => str(0x1d468 + idx_az(chr))], // 𝑨𝑩𝑪𝑫𝑬𝑭𝑮𝑯𝑰𝑱𝑲𝑳𝑴𝑵𝑶𝑷𝑸𝑹𝑺𝑻𝑼𝑽𝑾𝑿𝒀𝒁\n  [re_az, chr => str(0x1d482 + idx_az(chr))]  // 𝒂𝒃𝒄𝒅𝒆𝒇𝒈𝒉𝒊𝒋𝒌𝒍𝒎𝒏𝒐𝒑𝒒𝒓𝒔𝒕𝒖𝒗𝒘𝒙𝒚𝒛\n)\n","import { replace, str, re_AZ, re_az, re_09, idx_az, idx_09 } from './util'\n\nexport const regular = replace(\n  [re_AZ, chr => str(0x1d5a0 + idx_az(chr))], // 𝖠𝖡𝖢𝖣𝖤𝖥𝖦𝖧𝖨𝖩𝖪𝖫𝖬𝖭𝖮𝖯𝖰𝖱𝖲𝖳𝖴𝖵𝖶𝖷𝖸𝖹\n  [re_az, chr => str(0x1d5ba + idx_az(chr))], // 𝖺𝖻𝖼𝖽𝖾𝖿𝗀𝗁𝗂𝗃𝗄𝗅𝗆𝗇𝗈𝗉𝗊𝗋𝗌𝗍𝗎𝗏𝗐𝗑𝗒𝗓\n  [re_09, chr => str(0x1d7e2 + idx_09(chr))]  // 𝟢𝟣𝟤𝟥𝟦𝟧𝟨𝟩𝟪𝟫\n)\n\nexport const bold = replace(\n  [re_AZ, chr => str(0x1d5d4 + idx_az(chr))], // 𝗔𝗕𝗖𝗗𝗘𝗙𝗚𝗛𝗜𝗝𝗞𝗟𝗠𝗡𝗢𝗣𝗤𝗥𝗦𝗧𝗨𝗩𝗪𝗫𝗬𝗭\n  [re_az, chr => str(0x1d5ee + idx_az(chr))], // 𝗮𝗯𝗰𝗱𝗲𝗳𝗴𝗵𝗶𝗷𝗸𝗹𝗺𝗻𝗼𝗽𝗾𝗿𝘀𝘁𝘂𝘃𝘄𝘅𝘆𝘇\n  [re_09, chr => str(0x1d7ec + idx_09(chr))]  // 𝟬𝟭𝟮𝟯𝟰𝟱𝟲𝟳𝟴𝟵\n)\n\nexport const italic = replace(\n  [re_AZ, chr => str(0x1d608 + idx_az(chr))], // 𝘈𝘉𝘊𝘋𝘌𝘍𝘎𝘏𝘐𝘑𝘒𝘓𝘔𝘕𝘖𝘗𝘘𝘙𝘚𝘛𝘜𝘝𝘞𝘟𝘠𝘡\n  [re_az, chr => str(0x1d622 + idx_az(chr))]  // 𝘢𝘣𝘤𝘥𝘦𝘧𝘨𝘩𝘪𝘫𝘬𝘭𝘮𝘯𝘰𝘱𝘲𝘳𝘴𝘵𝘶𝘷𝘸𝘹𝘺𝘻\n)\n\nexport const boldItalic = replace(\n  [re_AZ, chr => str(0x1d63c + idx_az(chr))], // 𝘼𝘽𝘾𝘿𝙀𝙁𝙂𝙃𝙄𝙅𝙆𝙇𝙈𝙉𝙊𝙋𝙌𝙍𝙎𝙏𝙐𝙑𝙒𝙓𝙔𝙕\n  [re_az, chr => str(0x1d656 + idx_az(chr))]  // 𝙖𝙗𝙘𝙙𝙚𝙛𝙜𝙝𝙞𝙟𝙠𝙡𝙢𝙣𝙤𝙥𝙦𝙧𝙨𝙩𝙪𝙫𝙬𝙭𝙮𝙯\n)\n","import { replace, str, re_AZ, re_az, re_aZ, re_fw, re_09, idx, idx_az, idx_09 } from './util'\nimport * as fractur from './fractur'\nimport * as script from './script'\nimport * as serif from './serif'\nimport * as sansSerif from './sans-serif'\n\nexport const fullwidth = replace(\n  [re_fw, chr => str(0xfee0 + idx(chr))]\n)\n\nexport const regional = replace(\n  [re_aZ, chr => str(0x1f1e6 + idx_az(chr))]\n)\n\nexport const monospace = replace(\n  [re_AZ, chr => str(0x1d670 + idx_az(chr))], // 𝙰𝙱𝙲𝙳𝙴𝙵𝙶𝙷𝙸𝙹𝙺𝙻𝙼𝙽𝙾𝙿𝚀𝚁𝚂𝚃𝚄𝚅𝚆𝚇𝚈𝚉\n  [re_az, chr => str(0x1d68a + idx_az(chr))], // 𝚊𝚋𝚌𝚍𝚎𝚏𝚐𝚑𝚒𝚓𝚔𝚕𝚖𝚗𝚘𝚙𝚚𝚛𝚜𝚝𝚞𝚟𝚠𝚡𝚢𝚣\n  [re_09, chr => str(0x1d7f6 + idx_09(chr))]  // 𝟶𝟷𝟸𝟹𝟺𝟻𝟼𝟽𝟾𝟿\n)\n\nexport const doubleStruck = replace(\n  [re_AZ, chr => str(0x1d538 + idx_az(chr))], // 𝔸𝔹𝔺𝔻𝔼𝔽𝔾𝔿𝕀𝕁𝕂𝕃𝕄𝕅𝕆𝕇𝕈𝕉𝕊𝕋𝕌𝕍𝕎𝕏𝕐𝕑\n  [re_az, chr => str(0x1d552 + idx_az(chr))], // 𝕒𝕓𝕔𝕕𝕖𝕗𝕘𝕙𝕚𝕛𝕜𝕝𝕞𝕟𝕠𝕡𝕢𝕣𝕤𝕥𝕦𝕧𝕨𝕩𝕪𝕫\n  [re_09, chr => str(0x1d7d8 + idx_09(chr))]  // 𝟘𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡\n)\n\nexport { fractur, script, serif, sansSerif }\n","import { get } from '../object'\n\nexport type IFormat = (...args: any[]) => string\nexport type IFormatTag = <T>([head, ...tail]: ReadonlyArray<string>, ...fns: ((obj: T) => any)[]) => (obj: T) => string\n\nexport const tag: IFormatTag = ([ head, ...tail ], ...fns) =>\n  obj => fns.reduce((acc, fn, i) => acc + fn(obj) + tail[i], head)\n\nexport const format = (re: RegExp) => (tmpl: string): IFormat =>\n  (...args) => tmpl.replace(re, (_, path) => get(args, path))\n\nexport const brackets = format(/{(.*?)}/g)\n\nexport const hashBrackets = format(/#{(.*?)}/g)\n\nexport const dollarBrackets = format(/\\${(.*?)}/g)\n\nexport const doubleBrackets = format(/{{(.*?)}}/g)\n","// tslint:disable:curly\nconst ESCAPE = /\\\\/\nconst QUOTE = /'|\"/\nconst SPACE = /\\s/\n\nexport const split = function* (input: string) {\n  let escape = false\n  let quote = null\n  let arg = null\n\n  for (const char of input) {\n    const isEscape = ESCAPE.test(char)\n    const isQuote = QUOTE.test(char)\n    const isSpace = SPACE.test(char)\n\n    if (!isSpace && arg == null)\n      arg = ''\n\n    if (escape) {\n      arg += char\n      escape = false\n    }\n    else if (isEscape) {\n      escape = true\n    }\n    else if (isQuote && !quote) {\n      quote = char\n    }\n    else if (isQuote && quote === char) {\n      quote = null\n    }\n    else if (isSpace && !quote && arg != null) {\n      yield arg\n      arg = null\n    }\n    else if (arg != null) {\n      arg += char\n    }\n  }\n\n  if (escape || quote)\n    throw new SyntaxError\n\n  if (arg != null)\n    yield arg\n}\n","export const renderer = (tmpl: string, arg = '$') =>\n  new Function(arg, 'return `' + tmpl + '`')\n\nexport const render = (tmpl: string, obj: object, arg = '$') =>\n  new Function(arg, '{' + Object.keys(obj) + '}', 'return `' + tmpl + '`')(obj, obj)\n","import { min } from '../math'\n\nexport const levenshtein = (a: string, b: string) => {\n  const vec = new Uint32Array(a.length + 1)\n\n  for (let y = 1; y <= a.length; y++)\n    vec[y] = y\n\n  for (let x = 1; x <= b.length; x++) {\n    vec[0] = x\n    for (let last = x-1, y = 1; y <= a.length; y++) {\n      const tmp = vec[y]\n      vec[y] = min(vec[y]+1, vec[y-1]+1, last + +(a[y-1] !== b[x-1]))\n      last = tmp\n    }\n  }\n\n  return vec[a.length]\n}\n","const spaces = /(?:\\n|\\t|\\p{Z})/ug\nconst unsafe = /(?!\\n)(?:\\p{Cc}|\\p{Cf}|\\p{Cn}|\\p{Co}|\\p{Mn})/ug\n\nexport const sanitize = (text: string) => text\n  .normalize('NFKC')\n  .replace(spaces, ' ')\n  .replace(unsafe, '')\n","export const tuple = <T extends [void] | {}>(arr: T) => arr\n\nexport const firstNonNull = <T>(...args: (T | null | undefined)[]) => {\n  for (const arg of args)\n    if (arg != null)\n      return arg\n}\n","export const doctype = (html: string) =>\n  '<!doctype html>' + html\n\nexport const minify = (html: string) =>\n  html.replace(/\\s*(^|$|[<>])\\s*/g, '$1')\n\nexport const encode = (arg: string) =>\n  arg.replace(/[<>&\"]/g, c => `&#${c.charCodeAt(0)};`)\n"],"names":["abs","acos","acosh","asin","asinh","atan","atan2","atanh","cbrt","ceil","clz32","cos","cosh","exp","expm1","floor","fround","hypot","imul","log","log10","log1p","log2","max","min","pow","random","round","sign","sin","sinh","sqrt","tan","tanh","trunc","E","LN10","LN2","LOG10E","LOG2E","PI","SQRT1_2","SQRT2","Math","isFinite","isInteger","isNaN","isSafeInteger","parseFloat","parseInt","EPSILON","MAX_SAFE_INTEGER","MAX_VALUE","MIN_SAFE_INTEGER","MIN_VALUE","NEGATIVE_INFINITY","POSITIVE_INFINITY","Number","fit","fn","width","height","widthʹ","heightʹ","contain","cover","TAU","ε","τ","add","a","b","mul","clamp","t","lerp","norm","aʹ","bʹ","aʺ","bʺ","Kp","Ki","Kd","M","Infinity","tʹ","eʹ","Σe","PV","SP","e","Δt","Δe","items","length","i","j","at","x","y","order","z","size","area","lut","Float32Array","map","it","value","reduce","acc","accʹ","sum","addʹ","product","mulʹ","step","number","re","input","match","exec","predicate","arg","predicates","p","reverseByte","encodeByte","decodeByte","bytes","String","fromCharCode","str","Array","from","c","charCodeAt","R","G","B","lum","r","g","rgb","Uint8Array","canvas","line","join","imageData","data","xy00","xy10","xy01","xy11","xy02","xy12","xy03","xy13","b0","b1","b2","b3","byte","charCodes","rgbʹ","rʹ","gʹ","srgb","hʹ","sʹ","lʹ","hʺ","sʺ","lʺ","l","cosx","sinx","xyz","h","s","randomʹ","i.lum","i.r","i.g","i.b","toString","slice","rgbʺ","i.rgb","f.r","f.g","f.b","extend","Object","assign","overwrite","get","object","path","sep","split","o","next","props","Set","prototype","getPrototypeOf","getOwnPropertyNames","forEach","prop","element","name","options","document","createElement","parent","children","child","appendChild","event","preventDefault","Promise","resolve","requestAnimationFrame","getContext","generic","polynomial","previous","hash","crc32","crc32c","seed","lcg","N","seed0","seed1","seed2","seed3","w","state","Uint32Array","n","index","d","mat1","mat2","tmat","m","mapArgs","tag","strings","args","mapStrings","mapResult","raw","fnArg","fnStr","fnRes","identity","first","rest","escape","RegExp","source","replace","flags","parts","and","or","fromCodePoint","idx","chr","codePointAt","idx_az","idx_09","re_az","re_AZ","steps","text","format","tmpl","_","brackets","hashBrackets","dollarBrackets","doubleBrackets","ESCAPE","QUOTE","SPACE","head","tail","fns","obj","Function","keys","vec","last","tmp","normalize","quote","char","isEscape","test","isQuote","isSpace","SyntaxError","arr","html"],"mappings":"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"}